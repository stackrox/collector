version: 2

jobs:
  builder:
    machine: true
    steps:
    - run:
        name: Create Directory
        command: |
          sudo mkdir -m 0777 -p /go/src
          mkdir -p /go/src/github.com/stackrox/collector

    - run:
        name: Login to Docker Hub
        command: docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"

    - checkout:
        path: /go/src/github.com/stackrox/collector

    - run:
        name: Restore collector-builder cache image
        command: docker pull stackrox/collector-builder:cache || true

    - run:
        name: Build collector builder Docker image
        working_directory: /go/src/github.com/stackrox/collector/builder
        command: |
          docker build \
            --cache-from stackrox/collector-builder:cache \
            -t stackrox/collector-builder:cache .

    - run:
        name: Save collector-builder cache image
        command: docker push stackrox/collector-builder:cache

  kernels:
    machine: true
    parallelism: 16
    environment:
    - GOPATH: /go

    steps:
    - run:
        name: Google Authenticate
        working_directory: /home/circleci/.config/gcloud
        command: |
          echo "$GOOGLE_CREDENTIALS_KERNEL_CACHE" > auth.json
          pip install -U crcmod google_compute_engine
          gcloud config set core/project stackrox-ci
          gcloud config set compute/region us-east1
          gcloud config set compute/zone us-east1-d
          gcloud auth activate-service-account --key-file auth.json
          gcloud auth list

    - run:
        name: Create Directory
        command: |
          sudo mkdir -m 0777 -p /go/src /go/bin /go/pkg /packages
          mkdir -p /go/src/github.com/stackrox/collector

    - checkout:
        path: /go/src/github.com/stackrox/collector

    - run:
        name: Download Package Cache
        working_directory: /go/src/github.com/stackrox/collector
        command: |
          make -C kernel-modules download-package-cache
          find /packages
          du -h /packages

    - run:
        name: Build Builder Image
        working_directory: /go/src/github.com/stackrox/collector
        command: |
          make -C kernel-modules build-container

    - run:
        name: Build all
        working_directory: /go/src/github.com/stackrox/collector
        command: |
          echo "Nodes total: $CIRCLE_NODE_TOTAL"
          echo "Node index:  $CIRCLE_NODE_INDEX"
          docker run --rm -it \
            -v /packages:/packages \
            -v $PWD/sysdig/src:/sysdig-src \
            -v $PWD/kernel-modules/supported-kernels:/config \
            -v $PWD/kernel-modules/container/kernel-modules:/output \
            -e CIRCLE_NODE_TOTAL \
            -e CIRCLE_NODE_INDEX \
            build-kernel-modules:latest \
              --config /config/kernel-manifest.yml
          find kernel-modules/container/kernel-modules

    - persist_to_workspace:
        root: /go/src/github.com/stackrox/collector
        paths:
        - kernel-modules/container/kernel-modules

  grpc:
    docker:
    - image: ubuntu:trusty
    working_directory: /go/src/github.com/stackrox/collector

    steps:
    - checkout

    - run:
        name: Install dependencies
        command: |
          apt-get update -y
          apt-get install -y build-essential ca-certificates

    - restore_cache:
        key: grpc-cpp-plugin-{{ checksum "build/scripts/install-grpc-cpp-plugin.sh" }}

    - run:
        name: Install dependencies
        command: |
          if [[ -x /tmp/grpc_cpp_plugin ]]; then
            echo "The cached grpc_cpp_plugin was found, skipping build."
            circleci step halt
          fi

    - run:
        name: Build grpc plugin
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: make install-grpc

    - run:
        name: Prep grpc plugin
        command: cp -v /usr/local/bin/grpc_cpp_plugin /tmp/

    - save_cache:
        key: grpc-cpp-plugin-{{ checksum "build/scripts/install-grpc-cpp-plugin.sh" }}
        paths:
          - /tmp/grpc_cpp_plugin

  libsinsp:
    machine: true
    environment:
    - GOPATH: /go

    steps:
    - run:
        name: Create Directory
        command: |
          sudo mkdir -m 0777 -p /go/src /go/bin /go/pkg
          mkdir -p /go/src/github.com/stackrox/collector

    - run:
        name: Login to Docker Hub
        command: docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"

    - checkout:
        path: /go/src/github.com/stackrox/collector

    - run:
        name: Restore sysdig builder cache image
        command: docker pull stackrox/collector-builder:sysdig || true

    - run:
        name: Build libsinsp Wrapper
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: make container/libs/libsinsp-wrapper.so

    - run:
        name: Sanity check
        command: |
          ls -lh /go/src/github.com/stackrox/collector/collector/container/libs
          file   /go/src/github.com/stackrox/collector/collector/container/libs/libsinsp-wrapper.so
          docker images | grep collector

    - run:
        name: Save sysdig builder cache image
        command: docker push stackrox/collector-builder:sysdig

    - persist_to_workspace:
        root: /go/src/github.com/stackrox/collector
        paths:
        - collector/container/libs

  collector:
    machine: true
    environment:
    - GOPATH: /go
    steps:
    - run:
        name: Create Directory
        command: |
          sudo mkdir -m 0777 -p /go/src /go/bin /go/pkg
          mkdir -p /go/src/github.com/stackrox/collector

    - run:
        name: Login to Docker Hub
        command: docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"

    - checkout:
        path: /go/src/github.com/stackrox/collector

    - attach_workspace:
        at: /go/src/github.com/stackrox/collector

    - restore_cache:
        key: grpc-cpp-plugin-{{ checksum "/go/src/github.com/stackrox/collector/build/scripts/install-grpc-cpp-plugin.sh" }}

    - run:
        name: Prep grpc plugin
        command: sudo install /tmp/grpc_cpp_plugin /usr/local/bin/

    - run:
        name: Restore collector-builder cache image
        command: docker pull stackrox/collector-builder:cache

    - run:
        name: Sanity Check
        working_directory: /go/src/github.com/stackrox/collector
        command: |
          pwd
          echo '>>> Userspace lib:'
          ls -lh /go/src/github.com/stackrox/collector/collector/container/libs
          file   /go/src/github.com/stackrox/collector/collector/container/libs/libsinsp-wrapper.so
          echo '>>> Docker images:'
          docker images | grep collector
          echo '>>> gRPC plugin:'
          which grpc_cpp_plugin

    - run:
        name: Generate Protobuf Definitions
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: |
          PATH=$PATH:/go/bin
          make generated-srcs

    - run:
        name: Build collector
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: |
          mkdir -p container/bin
          docker run \
            -v $PWD:/src \
            -v $PWD/sysdig/src:/usr/local/sysdig \
            -v $PWD/container/libs/libsinsp-wrapper.so:/usr/local/lib/libsinsp-wrapper.so \
            -v $PWD/sysdig/src/driver/ppm_events_public.h:/usr/local/include/ppm_events_public.h \
            --name build stackrox/collector-builder:cache

    - run:
        name: Extract collector files
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: |
          cp cmake-build/collector                        container/bin/
          ls -lh container/bin/

    - persist_to_workspace:
        root: /go/src/github.com/stackrox/collector
        paths:
        - collector/container/bin

  images:
    machine: true
    environment:
    - GOPATH: /go
    - GOBIN: /usr/local/go/bin
    - INSTALL_DIRECTORY: /tmp

    steps:
    - run:
        name: Create Directory
        command: |
          sudo mkdir -m 0777 -p /go
          sudo mkdir -m 0777 -p /go/src
          sudo mkdir -m 0777 -p /go/pkg
          mkdir -p /go/src/github.com/stackrox/collector
          sudo chown circleci -R /go/*
          sudo chown circleci -R /usr/local/go/*

    - checkout:
        path: /go/src/github.com/stackrox/collector

    - attach_workspace:
        at: /go/src/github.com/stackrox/collector

    - run:
        name: Login to Docker Hub
        command: docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"

    - run:
        name: Sanity check
        working_directory: /go/src/github.com/stackrox/collector
        command: |
          echo '>>> Collector Artifacts:'
          find collector/container
          echo '>>> Kernel Modules:'
          find kernel-modules/container

    - run:
        name: Build kernel-modules Docker image
        working_directory: /go/src/github.com/stackrox/collector/kernel-modules/container
        command: |
          VERSION=$(git describe --tags)
          docker build \
            -t "stackrox/kernel-modules:$VERSION" \
            -t "stackrox/kernel-modules:snapshot-$VERSION" \
            .

    - run:
        name: Build collector Docker image
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: |
          VERSION=$(git describe --tags)
          cp NOTICE-collector.txt container/
          cp COPYING.txt container/
          docker build \
            -t stackrox/collector:snapshot-$VERSION \
            -t stackrox/collector:$VERSION \
            --build-arg base="$VERSION" \
            container

    - run:
        name: Sanity check images
        command: |
          docker images | grep kernel
          docker images | grep collector

    - run:
        name: Push images
        working_directory: /go/src/github.com/stackrox/collector
        command: |
          VERSION=$(git describe --tags)
          if [[ $CIRCLE_BRANCH = master || -n $CIRCLE_TAG ]]; then
            echo Pushing release images
            docker push stackrox/collector:$VERSION
            echo "Pushing kernel modules"
            docker push "stackrox/kernel-modules:$VERSION"
          else
            echo Pushing snapshot images
            docker push stackrox/collector:snapshot-$VERSION
            echo "Pushing kernel modules"
            docker push "stackrox/kernel-modules:snapshot-$VERSION"
          fi

    - run:
        name: Integration tests
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: |
          go get -u github.com/jstemmer/go-junit-report
          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
          sudo mv /tmp/dep /usr/local/bin/dep
          export COLLECTOR_TAG=$(git describe --tags)
          sudo curl -L "https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          make integration-tests integration-test-report

workflows:
  version: 2
  build:
    jobs:
    - builder:
        filters:
          tags:
            only: /.*/
    - grpc:
        filters:
          tags:
            only: /.*/
    - libsinsp:
        filters:
          tags:
            only: /.*/
    - collector:
        filters:
          tags:
            only: /.*/
        requires:
        - builder
        - grpc
        - libsinsp
    - kernels:
        filters:
          tags:
            only: /.*/
    - images:
        filters:
          tags:
            only: /.*/
        requires:
        - collector
        - kernels
