version: 2

jobs:
  builder:
    machine: true
    steps:
    - run:
        name: Create Directory
        command: |
          sudo mkdir -m 0777 -p /go/src
          mkdir -p /go/src/github.com/stackrox/collector

    - checkout:
        path: /go/src/github.com/stackrox/collector

    - run:
        name: Build collector builder Docker image
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: docker build -t build_collector -f Dockerfile .

    - run:
        name: Save collector builder Docker image
        working_directory: /go/src/github.com/stackrox/collector
        command: |
          mkdir -p docker-cache
          docker save -o docker-cache/build_collector.tar build_collector:latest

    - persist_to_workspace:
        root: /go/src/github.com/stackrox/collector
        paths:
        - docker-cache

  kernels:
    docker:
    - image: google/cloud-sdk:206.0.0-alpine
    parallelism: 9
    working_directory: /go/src/github.com/stackrox/collector

    steps:
    - run:
        name: Google Authenticate
        working_directory: /root/.config/gcloud
        command: |
          echo "$GOOGLE_CREDENTIALS_KERNEL_CACHE" > auth.json
          gcloud config set core/project stackrox-ci
          gcloud config set compute/region us-east1
          gcloud config set compute/zone us-east1-d
          gcloud auth activate-service-account --key-file auth.json
          gcloud auth list

    - run:
        name: Install Build Dependencies
        working_directory: /tmp
        command: |
          wget --quiet https://download.docker.com/linux/static/stable/x86_64/docker-18.06.0-ce.tgz
          tar -xf docker-18.06.0-ce.tgz
          install docker/docker /usr/bin
          rm -f docker-18.06.0-ce.tgz
          apk add --no-cache make

    - setup_remote_docker
    - checkout

    - run:
        name: Download Package Cache
        command: |
          make -C kernel-modules download-package-cache
          find /packages
          du -h /packages

    - run:
        name: Pack Docker Volumes
        command: |
          docker create -v /packages --name packages alpine:3.8 /bin/true
          echo 'Packing packages volume'
          time docker cp /packages/. packages:/packages
          docker create -v /sysdig-src --name sysdig alpine:3.8 /bin/true
          echo 'Packing sysdig volume'
          time docker cp sysdig/src/. sysdig:/sysdig-src
          docker create -v /output --name output alpine:3.8 /bin/true

    - run:
        name: Build Builder Image
        command: |
          make -C kernel-modules build-container

    - run:
        name: Build all
        command: ./scripts/ci-build

    - run:
        name: Copy Built Modules to Workspace
        working_directory: kernel-modules
        command: |
          mkdir -p container/kernel-modules/
          docker cp output:/output/. container/kernel-modules/
          find container/kernel-modules

    - persist_to_workspace:
        root: .
        paths:
        - kernel-modules/container/kernel-modules

  grpc:
    docker:
    - image: ubuntu:trusty
    working_directory: /go/src/github.com/stackrox/collector

    steps:
    - checkout

    - run:
        name: Install dependencies
        command: |
          apt-get update -y
          apt-get install -y build-essential ca-certificates

    - restore_cache:
        key: grpc-cpp-plugin-{{ checksum "build/scripts/install-grpc-cpp-plugin.sh" }}

    - run:
        name: Install dependencies
        command: |
          if [[ -x /tmp/grpc_cpp_plugin ]]; then
            echo "The cached grpc_cpp_plugin was found, skipping build."
            circleci step halt
          fi

    - run:
        name: Build grpc plugin
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: make install-grpc

    - run:
        name: Prep grpc plugin
        command: cp -v /usr/local/bin/grpc_cpp_plugin /tmp/

    - save_cache:
        key: grpc-cpp-plugin-{{ checksum "build/scripts/install-grpc-cpp-plugin.sh" }}
        paths:
          - /tmp/grpc_cpp_plugin

  libsinsp:
    machine: true
    environment:
    - GOPATH: /go

    steps:
    - run:
        name: Create Directory
        command: |
          sudo mkdir -m 0777 -p /go/src /go/bin /go/pkg
          mkdir -p /go/src/github.com/stackrox/collector

    - checkout:
        path: /go/src/github.com/stackrox/collector

    - run:
        name: Build libsinsp Wrapper
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: make container/libs/libsinsp-wrapper.so

    - run:
        name: Sanity check
        command: |
          ls -lh /go/src/github.com/stackrox/collector/collector/container/libs
          file   /go/src/github.com/stackrox/collector/collector/container/libs/libsinsp-wrapper.so

    - persist_to_workspace:
        root: /go/src/github.com/stackrox/collector
        paths:
        - collector/container/libs

  collector:
    machine: true
    environment:
    - GOPATH: /go
    steps:
    - run:
        name: Create Directory
        command: |
          sudo mkdir -m 0777 -p /go/src /go/bin /go/pkg
          mkdir -p /go/src/github.com/stackrox/collector

    - checkout:
        path: /go/src/github.com/stackrox/collector

    - attach_workspace:
        at: /go/src/github.com/stackrox/collector

    - restore_cache:
        key: grpc-cpp-plugin-{{ checksum "/go/src/github.com/stackrox/collector/build/scripts/install-grpc-cpp-plugin.sh" }}

    - run:
        name: Prep grpc plugin
        command: sudo install /tmp/grpc_cpp_plugin /usr/local/bin/

    - run:
        name: Load collector builder Docker image
        working_directory: /go/src/github.com/stackrox/collector
        command: docker load < /go/src/github.com/stackrox/collector/docker-cache/build_collector.tar

    - run:
        name: Sanity Check
        working_directory: /go/src/github.com/stackrox/collector
        command: |
          pwd
          echo '>>> Userspace lib:'
          ls -lh /go/src/github.com/stackrox/collector/collector/container/libs
          file   /go/src/github.com/stackrox/collector/collector/container/libs/libsinsp-wrapper.so
          echo '>>> Docker tarballs:'
          find /go/src/github.com/stackrox/collector/docker-cache
          echo '>>> Docker images:'
          docker images | grep collector
          echo '>>> gRPC plugin:'
          which grpc_cpp_plugin

    - run:
        name: Generate Protobuf Definitions
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: make generated-srcs

    - run:
        name: Build collector
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: |
          mkdir -p container/bin
          docker run \
            -v $PWD:/src \
            -v $PWD/sysdig/src:/usr/local/sysdig \
            -v $PWD/container/libs/libsinsp-wrapper.so:/usr/local/lib/libsinsp-wrapper.so \
            -v $PWD/sysdig/src/driver/ppm_events_public.h:/usr/local/include/ppm_events_public.h \
            --name build build_collector

    - run:
        name: Extract collector files
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: |
          cp cmake-build/collector                        container/bin/
          docker cp build:/usr/local/bin/curl             container/bin/
          docker cp build:/usr/local/lib/libcurl.so       container/libs/
          docker cp -L build:/usr/local/lib/libgrpc.so    container/libs/
          docker cp -L build:/usr/local/lib/librdkafka.so container/libs/
          ls -lh container/bin/
          ls -lh container/libs/

    - persist_to_workspace:
        root: /go/src/github.com/stackrox/collector
        paths:
        - collector/container/bin
        - collector/container/libs

  images:
    machine: true
    steps:
    - run:
        name: Create Directory
        command: |
          sudo mkdir -m 0777 -p /go/src
          mkdir -p /go/src/github.com/stackrox/collector

    - checkout:
        path: /go/src/github.com/stackrox/collector

    - attach_workspace:
        at: /go/src/github.com/stackrox/collector

    - run:
        name: Login to Docker Hub
        command: docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"

    - run:
        name: Sanity check
        working_directory: /go/src/github.com/stackrox/collector
        command: |
          echo '>>> Collector Artifacts:'
          find collector/container
          echo '>>> Kernel Modules:'
          find kernel-modules/container
          echo '>>> Docker Dependency:'
          docker pull stackrox/jq:bf88c73c20ff1642aa2566ae67df18ca5b4b63ab

    - run:
        name: Build kernel-modules Docker image
        working_directory: /go/src/github.com/stackrox/collector/kernel-modules/container
        command: docker build -t stackrox/kernel-modules:latest .

    - run:
        name: Build collector Docker image
        working_directory: /go/src/github.com/stackrox/collector/collector
        command: |
          VERSION=$(git describe --tags)
          cp NOTICE-collector.txt container/
          cp COPYING.txt container/
          docker build \
            -t stackrox/collector:snapshot-$VERSION \
            -t stackrox/collector:$VERSION \
            container

    - run:
        name: Sanity check images
        command: |
          docker images | grep kernel
          docker images | grep collector

    - run:
        name: Push images
        working_directory: /go/src/github.com/stackrox/collector
        command: |
          VERSION=$(git describe --tags)
          if [[ $CIRCLE_BRANCH = master || -n $CIRCLE_TAG ]]; then
            echo Pushing release images
            docker push stackrox/collector:$VERSION
          else
            echo Pushing snapshot images
            docker push stackrox/collector:snapshot-$VERSION
          fi

workflows:
  version: 2
  build:
    jobs:
    - builder:
        filters:
          tags:
            only: /.*/
    - grpc:
        filters:
          tags:
            only: /.*/
    - libsinsp:
        filters:
          tags:
            only: /.*/
    - collector:
        filters:
          tags:
            only: /.*/
        requires:
        - builder
        - grpc
        - libsinsp
    - kernels:
        filters:
          tags:
            only: /.*/
    - images:
        filters:
          tags:
            only: /.*/
        requires:
        - collector
        - kernels
