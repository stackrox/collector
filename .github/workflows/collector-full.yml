name: Build the collector full image

on:
  workflow_call:
    inputs:
      collector-tag:
        type: string
        required: true
        description: |
          The tag used to build the collector image
      skip-built-drivers:
        type: boolean
        required: true
        description: |
          Skip built drivers if no new drivers were built.
      drivers-bucket:
        type: string
        required: true
        description: |
          GCP bucket to pull drivers from.
      is-external:
        type: string
        description: |
          Signals whether CI is running from a fork
        default: false

jobs:
  build-collector-full:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'build-full-images') || inputs.is-external == 'true' }}

    steps:
      - uses: actions/checkout@v3

      - name: Restore built drivers
        uses: actions/download-artifact@v3
        if: ${{ github.event_name == 'pull_request' && !inputs.skip-built-drivers }}
        with:
          name: built-drivers
          path: /tmp/built-drivers/

      - name: Set environment variables
        run: |
          echo "DRIVER_VERSION=$(cat ${{ github.workspace }}/kernel-modules/MODULE_VERSION)" >> "$GITHUB_ENV"
          echo "CONTEXT_DRIVERS_DIR=${{ github.workspace }}/kernel-modules/container/kernel-modules" >> "$GITHUB_ENV"

          if [[ "${{ inputs.is-external }}" == false ]]; then
            echo "COLLECTOR_REGISTRY=quay.io/stackrox-io/collector" >> "$GITHUB_ENV"
            echo "COLLECTOR_IMAGE=quay.io/stackrox-io/collector:${{ inputs.collector-tag }}" >> "$GITHUB_ENV"
          else
            echo "COLLECTOR_REGISTRY=ghcr.io/${{ github.event.pull_request.head.repo.full_name }}" >> "$GITHUB_ENV"
            echo "COLLECTOR_IMAGE=ghcr.io/${{ github.event.pull_request.head.repo.full_name }}:${{ inputs.collector-tag }}" >> "$GITHUB_ENV"
          fi

      - name: Download drivers from GCP
        if: ${{ inputs.is-external == 'false' }}
        run: |
          mkdir -p "${CONTEXT_DRIVERS_DIR}"

          gsutil -m rsync -r "gs://${{ inputs.drivers-bucket }}/${DRIVER_VERSION}/" \
            "${CONTEXT_DRIVERS_DIR}"

      - name: Add built drivers
        run: |
          # Create the directory again, in case we are running from a fork
          mkdir -p "${CONTEXT_DRIVERS_DIR}"

          BUILT_DRIVERS_DIR="/tmp/built-drivers/${DRIVER_VERSION}/"

          if [[ -d "${BUILT_DRIVERS_DIR}" ]]; then
            find "${BUILT_DRIVERS_DIR}" -type f -exec mv -t "${CONTEXT_DRIVERS_DIR}" {} +
          fi

      - name: Pull slim image and build full image
        run: |
          docker build \
            --target=probe-layer-5 \
            --tag "${COLLECTOR_IMAGE}" \
            --build-arg "collector_repo=${COLLECTOR_REGISTRY}" \
            --build-arg collector_version=${{ inputs.collector-tag }} \
            --build-arg module_version="${DRIVER_VERSION}" \
            --build-arg max_layer_size=300 \
            --build-arg max_layer_depth=5 \
            "${{ github.workspace }}/kernel-modules/container"

      - name: Login to quay.io/stackrox-io
        uses: docker/login-action@v2
        if: ${{ inputs.is-external == 'false' }}
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Push stackrox-io full image
        if: ${{ inputs.is-external == 'false' }}
        run: |
          docker push "${COLLECTOR_IMAGE}"

      - name: Retag and push stackrox-io -latest
        uses: ./.github/actions/retag-and-push
        if: ${{ inputs.is-external == 'false' }}
        with:
          src-image: ${{ env.COLLECTOR_IMAGE }}
          dst-image: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}-latest
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Retag and push rhacs-eng
        uses: ./.github/actions/retag-and-push
        if: ${{ inputs.is-external == 'false' }}
        with:
          src-image: ${{ env.COLLECTOR_IMAGE }}
          dst-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Retag and push rhacs-eng -latest
        uses: ./.github/actions/retag-and-push
        if: ${{ inputs.is-external == 'false' }}
        with:
          src-image: ${{ env.COLLECTOR_IMAGE }}
          dst-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}-latest
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        if: ${{ inputs.is-external == 'true' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push ghcr.io full image
        if: ${{ inputs.is-external == 'true' }}
        run: |
          docker push "${COLLECTOR_IMAGE}"

  retag-collector-full:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'build-full-images') && !inputs.is-external }}
    env:
      COLLECTOR_IMAGE_SLIM: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}-slim

    steps:
      - uses: actions/checkout@v3

      - name: Pull slim image
        run: |
          docker pull "${COLLECTOR_IMAGE_SLIM}"

      - name: Retag and push stackrox-io
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE_SLIM }}
          dst-image: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Retag and push stackrox-io -latest
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE_SLIM }}
          dst-image: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}-latest
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Retag and push rhacs-eng
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE_SLIM }}
          dst-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Retag and push rhacs-eng -latest
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE_SLIM }}
          dst-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}-latest
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}
