name: Build the collector full image

on:
  workflow_call:
    inputs:
      collector-tag:
        type: string
        required: true
        description: |
          The tag used to build the collector image
      build-full-image:
        type: boolean
        required: true
        description: |
          If true, the full collector image will be built, else, the -slim
          image of collector will be retagged.
      skip-built-drivers:
        type: boolean
        required: true
        description: |
          Skip built drivers if no new drivers were built.
      drivers-bucket:
        type: string
        required: true
        description: |
          GCP bucket to pull drivers from.
      optional-drivers-bucket:
        type: string
        description: |
          Optional GCP bucket. When used, the drivers in this bucket will
          take precendence over the one in drivers-bucket.
      use-optional-bucket:
        type: boolean
        default: false
        description: |
          If true, the optional drivers will be added to the final image
          and overwrite any colliding drivers.
      max-layer-depth:
        type: string
        default: "5"
        description: |
          Max layer the drivers will be split into for x86 images

jobs:
  build-collector-full:
    runs-on: ubuntu-latest
    if: inputs.build-full-image
    strategy:
      fail-fast: false
      matrix:
        arch:
        - amd64
        - ppc64le
        - s390x
        max-layer-depth:
        - ${{ inputs.max-layer-depth }}
        - 1
        exclude:
        - arch: amd64
          max-layer-depth: 1
        - arch: ppc64le
          max-layer-depth: ${{ inputs.max-layer-depth }}
        - arch: s390x
          max-layer-depth: ${{ inputs.max-layer-depth }}
    env:
      COLLECTOR_IMAGE: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Restore built drivers
        uses: actions/download-artifact@v3
        if: matrix.arch == 'amd64' && !inputs.skip-built-drivers
        with:
          name: built-drivers
          path: /tmp/built-drivers/

      - name: Set environment variables
        run: |
          echo "DRIVER_VERSION=$(cat ${{ github.workspace }}/kernel-modules/MODULE_VERSION)" >> "$GITHUB_ENV"
          echo "CONTEXT_DRIVERS_DIR=${{ github.workspace }}/kernel-modules/container/kernel-modules" >> "$GITHUB_ENV"

      - name: Create context directory
        run: mkdir -p "${CONTEXT_DRIVERS_DIR}"

      - name: Download drivers from GCP
        if: matrix.arch == 'amd64'
        run: |
          gsutil -m rsync -r "gs://${{ inputs.drivers-bucket }}/${DRIVER_VERSION}/" \
            "${CONTEXT_DRIVERS_DIR}"

      - name: Add built drivers
        if: matrix.arch == 'amd64'
        run: |
          BUILT_DRIVERS_DIR="/tmp/built-drivers/${DRIVER_VERSION}/"

          if [[ -d "${BUILT_DRIVERS_DIR}" ]]; then
            find "${BUILT_DRIVERS_DIR}" -type f -exec mv -t "${CONTEXT_DRIVERS_DIR}" {} +
          fi

      # Downstream built drivers take precedence over all others.
      - name: Download downstream built drivers from GCP
        if: inputs.use-optional-bucket
        run: |
          GCP_BUCKET="gs://${{ inputs.optional-drivers-bucket }}/${{ matrix.arch }}"
          if [[ ${{ matrix.arch }} == "amd64" ]]; then
            GCP_BUCKET="gs://${{ inputs.optional-drivers-bucket }}/x86_64"
          fi

          gsutil -m rsync -r "${GCP_BUCKET}/${DRIVER_VERSION}/" \
            "${CONTEXT_DRIVERS_DIR}"

      - name: Pull slim image and build full image
        run: |
          docker build \
            --platform linux/${{ matrix.arch }} \
            --target=probe-layer-${{ matrix.max-layer-depth }} \
            --tag "${COLLECTOR_IMAGE}-${{ matrix.arch }}" \
            --build-arg collector_repo=quay.io/stackrox-io/collector \
            --build-arg collector_version=${{ inputs.collector-tag }} \
            --build-arg module_version="${DRIVER_VERSION}" \
            --build-arg max_layer_size=300 \
            --build-arg max_layer_depth=${{ matrix.max-layer-depth }} \
            "${{ github.workspace }}/kernel-modules/container"

      - name: Login to quay.io/stackrox-io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Push stackrox-io full image
        run: |
          docker push "${COLLECTOR_IMAGE}-${{ matrix.arch }}"

      - name: Retag and push stackrox-io -latest
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE }}-${{ matrix.arch }}
          dst-image: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}-${{ matrix.arch }}-latest
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Retag and push rhacs-eng
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE }}-${{ matrix.arch }}
          dst-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}-${{ matrix.arch }}
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Retag and push rhacs-eng -latest
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE }}-${{ matrix.arch }}
          dst-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}-${{ matrix.arch }}-latest
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

  multiarch-manifests:
    runs-on: ubuntu-latest
    if: inputs.build-full-image
    needs:
    - build-collector-full
    env:
      ARCHS: amd64 ppc64le s390x
      COLLECTOR_IMAGE: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to quay.io/stackrox-io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Create and push multiarch manifest for stackrox-io
        uses: ./.github/actions/create-multiarch-manifest
        with:
          base-image: ${{ env.COLLECTOR_IMAGE }}
          archs: ${{ env.ARCHS }}

      - name: Create and push multiarch manifest for stackrox-io -latest
        uses: ./.github/actions/create-multiarch-manifest
        with:
          base-image: ${{ env.COLLECTOR_IMAGE }}
          archs: ${{ env.ARCHS }}
          suffix: -latest

      - name: Login to quay.io/rhacs-eng
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Create and push multiarch manifest for rhacs-eng
        uses: ./.github/actions/create-multiarch-manifest
        with:
          base-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}
          archs: ${{ env.ARCHS }}

      - name: Create and push multiarch manifest for rhacs-eng -latest
        uses: ./.github/actions/create-multiarch-manifest
        with:
          base-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}
          archs: ${{ env.ARCHS }}
          suffix: -latest

  retag-collector-full:
    runs-on: ubuntu-latest
    if: ${{ !inputs.build-full-image }}
    env:
      COLLECTOR_IMAGE_SLIM: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}-slim

    steps:
      - uses: actions/checkout@v3

      - name: Pull slim image
        run: |
          docker pull "${COLLECTOR_IMAGE_SLIM}"

      - name: Retag and push stackrox-io
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE_SLIM }}
          dst-image: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Retag and push stackrox-io -latest
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE_SLIM }}
          dst-image: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}-latest
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Retag and push rhacs-eng
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE_SLIM }}
          dst-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Retag and push rhacs-eng -latest
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ env.COLLECTOR_IMAGE_SLIM }}
          dst-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}-latest
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}
