name: Collector image build

on:
  workflow_call:
    inputs:
      collector-tag:
        type: string
        required: true
        description: |
          The tag used to build the collector image
      collector-image:
        type: string
        required: true
        description: |
          Basic stackrox-io image built

env:
  COLLECTOR_TAG: ${{ inputs.collector-tag }}
  DEFAULT_BUILDER_TAG: cache
  RHACS_ENG_IMAGE: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}

jobs:
  set-environment:
    name: Set environment variables
    runs-on: ubuntu-latest
    outputs:
      build-builder-image: ${{ steps.set-env.outputs.build-builder-image }}
      collector-builder-tag: ${{ steps.set-env.outputs.collector-builder-tag }}

    steps:
      - name: Define builder tag
        id: set-env
        run: |

          if [[ "${{ github.event_name }}" != 'pull_request' ]]; then
            echo "collector-builder-tag=${DEFAULT_BUILDER_TAG}" >> "$GITHUB_OUTPUT"
          else
            #We have 2 options:
            #- We build the builder from scratch and give it a custom tag
            #- We use the existing cache
            COLLECTOR_BUILDER_TAG="${DEFAULT_BUILDER_TAG}"
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'build-builder-image') }}" == "true" ]]; then
              COLLECTOR_BUILDER_TAG="${{ inputs.collector-tag }}"
            fi

            echo "collector-builder-tag=$COLLECTOR_BUILDER_TAG" >> "$GITHUB_OUTPUT"
          fi

  build-collector-image:
    name: Build the collector slim image
    needs: set-environment
    runs-on: ubuntu-latest
    # Multiarch builds sometimes take for eeeeeeeeeever
    timeout-minutes: 480
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, ppc64le, s390x]

    env:
      COLLECTOR_BUILDER_TAG: ${{ needs.set-environment.outputs.collector-builder-tag }}
      PLATFORM: linux/${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checks PR, main and release branches
        run: |
          if [[ "${{ github.event_name }}" != 'pull_request' ]]; then
            echo 'BUILD_BUILDER_IMAGE=true' >> "$GITHUB_ENV"
          else
            # We have 2 options:
            # - We build the builder from scratch and give it a custom tag
            # - We use the existing cache
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'build-builder-image') }}" == "true" ]]; then
              echo 'BUILD_BUILDER_IMAGE=true' >> "$GITHUB_ENV"
            else
              echo 'BUILD_BUILDER_IMAGE=false' >> "$GITHUB_ENV"
            fi

            echo "COLLECTOR_APPEND_CID=true" >> "$GITHUB_ENV"

            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'address-sanitizer') }}" == "true" ]]; then
              echo "ADDRESS_SANITIZER=true" >> "$GITHUB_ENV"
            fi
          fi

      - name: Create secrets.yml
        run: |
          {
            echo "---"
            echo "stackrox_io_username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}"
            echo "stackrox_io_password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}"
            echo "rhacs_eng_username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}"
            echo "rhacs_eng_password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}"
          } > ${{ github.workspace }}/ansible/secrets.yml

      - name: Build images
        if: |
          github.event_name == 'push' ||
          matrix.arch == 'amd64' ||
          !contains(github.event.pull_request.labels.*.name, 'skip-multiarch-builds')
        run: |
          ansible-galaxy install -r ansible/requirements.yml
          ansible-playbook \
            --connection local \
            -i localhost, \
            --limit localhost \
            -e collector_image='${{ inputs.collector-image }}' \
            -e arch='${{ matrix.arch }}' \
            -e push_builder="${{ github.event_name == 'push' || needs.set-environment.outputs.collector-builder-tag != env.DEFAULT_BUILDER_TAG }}" \
            -e @'${{ github.workspace }}/ansible/secrets.yml' \
            ansible/ci-build-collector.yml

  create-multiarch-manifest:
    needs:
    - set-environment
    - build-collector-image
    name: Create Multiarch manifest
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' ||
      !contains(github.event.pull_request.labels.*.name, 'skip-multiarch-builds')
    env:
      COLLECTOR_BUILDER_TAG: ${{ needs.set-environment.outputs.collector-builder-tag }}
      ARCHS: amd64 ppc64le s390x

    steps:
      - uses: actions/checkout@v3

      - name: Login to quay.io/stackrox-io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Create and push multiarch manifest for stackrox-io -slim
        uses: ./.github/actions/create-multiarch-manifest
        with:
          base-image: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}
          archs: ${{ env.ARCHS }}
          suffix: -slim

      - name: Create and push multiarch manifest for stackrox-io -base
        uses: ./.github/actions/create-multiarch-manifest
        with:
          base-image: quay.io/stackrox-io/collector:${{ inputs.collector-tag }}
          archs: ${{ env.ARCHS }}
          suffix: -base

      - name: Create and push multiarch manifest for builder to stackrox-io
        if: github.event_name == 'push' || needs.set-environment.outputs.collector-builder-tag != env.DEFAULT_BUILDER_TAG
        uses: ./.github/actions/create-multiarch-manifest
        with:
          base-image: quay.io/stackrox-io/collector-builder:${{ env.COLLECTOR_BUILDER_TAG }}
          archs: ${{ env.ARCHS }}

      - name: Login to quay.io/rhacs-eng
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Create and push multiarch manifest for rhacs-eng -slim
        uses: ./.github/actions/create-multiarch-manifest
        with:
          base-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}
          archs: ${{ env.ARCHS }}
          suffix: -slim

      - name: Create and push multiarch manifest for rhacs-eng -base
        uses: ./.github/actions/create-multiarch-manifest
        with:
          base-image: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}
          archs: ${{ env.ARCHS }}
          suffix: -base

      - name: Create and push multiarch manifest for builder to rhacs-eng
        if: github.event_name == 'push' || needs.set-environment.outputs.collector-builder-tag != env.DEFAULT_BUILDER_TAG
        uses: ./.github/actions/create-multiarch-manifest
        with:
          base-image: quay.io/rhacs-eng/collector-builder:${{ env.COLLECTOR_BUILDER_TAG }}
          archs: ${{ env.ARCHS }}

  retag-x86-image:
    needs:
    - set-environment
    - build-collector-image
    name: Retag x86 slim image
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' &&
      contains(github.event.pull_request.labels.*.name, 'skip-multiarch-builds')
    env:
      COLLECTOR_BUILDER_TAG: ${{ needs.set-environment.outputs.collector-builder-tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Pull images to retag
        run: |
          docker pull ${{ inputs.collector-image }}-amd64-slim
          docker pull quay.io/stackrox-io/collector-builder:${{ env.COLLECTOR_BUILDER_TAG }}-amd64

      - name: Retag and push stackrox-io -slim
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ inputs.collector-image }}-amd64-slim
          dst-image: ${{ inputs.collector-image }}-slim
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Retag and push stackrox-io -base
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ inputs.collector-image }}-amd64-slim
          dst-image: ${{ inputs.collector-image }}-base
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Retag and push rhacs-eng -slim
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ inputs.collector-image }}-amd64-slim
          dst-image: ${{ env.RHACS_ENG_IMAGE }}-slim
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Retag and push rhacs-eng -base
        uses: ./.github/actions/retag-and-push
        with:
          src-image: ${{ inputs.collector-image }}-amd64-slim
          dst-image: ${{ env.RHACS_ENG_IMAGE }}-base
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Retag and push stackrox-io builder
        uses: ./.github/actions/retag-and-push
        if: |
          github.event_name == 'push' ||
          needs.set-environment.outputs.collector-builder-tag != env.DEFAULT_BUILDER_TAG
        with:
          src-image: quay.io/stackrox-io/collector-builder:${{ env.COLLECTOR_BUILDER_TAG }}-amd64
          dst-image: quay.io/stackrox-io/collector-builder:${{ env.COLLECTOR_BUILDER_TAG }}
          username: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
          password: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

      - name: Retag and push rhacs-eng builder
        uses: ./.github/actions/retag-and-push
        if: |
          github.event_name == 'push' ||
          needs.set-environment.outputs.collector-builder-tag != env.DEFAULT_BUILDER_TAG
        with:
          src-image: quay.io/stackrox-io/collector-builder:${{ env.COLLECTOR_BUILDER_TAG }}-amd64
          dst-image: quay.io/rhacs-eng/collector-builder:${{ env.COLLECTOR_BUILDER_TAG }}
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}
