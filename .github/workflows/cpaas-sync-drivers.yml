name: Sync CPaaS built drivers with GCP

on:
  workflow_call:
    inputs:
      support-packages-bucket:
        type: string
        required: true
        description: |
          Bucket where CPaaS support packages will be pushed to.
      support-packages-index-bucket:
        type: string
        required: true
        description: |
          Bucket to push the generated support-packages index file into
      public-support-packages-bucket:
        type: string
        required: true
        description: |
          Bucket where CPaaS support packages will be made available for users.
      drivers-bucket:
        type: string
        required: true
        description: |
          Bucket where CPaaS drivers will be pushed to.
      merged-drivers-bucket:
        type: string
        required: true
        description: |
          Bucket where all drivers will be pushed to.
      all-archs-drivers-bucket:
        type: string
        required: true
        description: |
          Bucket where CPaaS drivers for all archs will be pushed to.
      branch-name:
        type: string
        required: true
        description: Branch CI is running on

jobs:
  sync-drivers:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
        - x86_64
        - s390x
        - ppc64le

    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: brew.registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Download driver image and extract files
        run: |
          docker create \
            --platform linux/${{ matrix.platform }} \
            --name drivers \
            --pull always \
            brew.registry.redhat.io/rh-osbs/rhacs-drivers-build-rhel8:0.1.0

          TMP_DIR="$(mktemp -d)"
          {
            echo "FAILURES_DIR=${TMP_DIR}/FAILURES"
            echo "DRIVER_TMP_DIR=${TMP_DIR}/kernel-modules"
            echo "SUPPORT_PACKAGE_TMP_DIR=${TMP_DIR}/support-packages"
          } >> "$GITHUB_ENV"

          docker cp drivers:/FAILURES/ "${TMP_DIR}"
          docker cp drivers:/kernel-modules/ "${TMP_DIR}"
          docker cp drivers:/support-packages/ "${TMP_DIR}"

          # This empty file is needed for the failure artifact to be
          # created when there are no failures
          touch "${TMP_DIR}/FAILURES/.dummy"

      - name: Upload failure logs
        uses: actions/upload-artifact@v4
        with:
          name: drivers-build-failures-${{ matrix.platform }}
          if-no-files-found: ignore
          path: |
            ${{ env.FAILURES_DIR }}
          retention-days: 7

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_COLLECTOR_SVC_ACCT }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Push drivers
        run : |
          shopt -s nullglob
          shopt -s dotglob

          source ${{ github.workspace }}/kernel-modules/support-packages/utils.sh

          for driver_version_dir in "${DRIVER_TMP_DIR}"/*; do
            files=("${driver_version_dir}"/*.{gz,unavail})
            driver_version="$(basename "${driver_version_dir}")"
            [[ "${#files[@]}" -gt 0 ]] || continue
            printf '%s\n' "${files[@]}" | \
              gsutil -m cp -n -I "gs://${{ inputs.drivers-bucket }}/${{ matrix.platform }}/${driver_version}/"

            # Starting with version 2.6.0, we allow for direct download of all
            # downstream built drivers.
            if use_downstream "${driver_version}"; then
              printf '%s\n' "${files[@]}" | \
                gsutil -m cp -n -I "gs://${{ inputs.all-archs-drivers-bucket }}/${driver_version}/"
            fi
          done

      # x86 support packages will not be uploaded to GCP.
      # This is to prevent mixing it up with the upstream built packages.
      - name: Generate 'latest' and checksum files
        if: matrix.platform != 'x86_64'
        run: ${{ github.workspace }}/kernel-modules/support-packages/cpaas-additional-files.sh

      - name: Create metadata.json
        uses: ./.github/actions/support-package-metadata-json
        if: matrix.platform != 'x86_64'
        with:
          support-pkg-dir: ${{ env.SUPPORT_PACKAGE_TMP_DIR }}

      - name: Push support-packages
        uses: 'google-github-actions/upload-cloud-storage@v2'
        if: matrix.platform != 'x86_64'
        with:
          path: ${{ env.SUPPORT_PACKAGE_TMP_DIR }}
          parent: false
          destination: ${{ inputs.support-packages-bucket }}/${{ matrix.platform }}

      - name: Push support-packages to public bucket
        uses: 'google-github-actions/upload-cloud-storage@v2'
        if: github.event_name != 'pull_request' && matrix.platform != 'x86_64'
        with:
          path: ${{ env.SUPPORT_PACKAGE_TMP_DIR }}
          parent: false
          destination: ${{ inputs.public-support-packages-bucket }}/${{ matrix.platform }}

  merge-drivers-failures:
    runs-on: ubuntu-latest
    needs: sync-drivers
    steps:
      - name: Merge drivers failures
        uses: actions/upload-artifact/merge@v4
        with:
          name: drivers-build-failures
          pattern: drivers-build-failures-*

  update-index:
    runs-on: ubuntu-latest
    needs: sync-drivers
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_COLLECTOR_SVC_ACCT }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - uses: ./.github/actions/support-package-metadata
        with:
          branch-name: ${{ inputs.branch-name }}

      - uses: ./.github/actions/support-package-index
        with:
          gcp-bucket: ${{ inputs.support-packages-bucket }}
          metadata-path: /tmp/support-packages/metadata
          output-path: /tmp/support-packages/output

      - name: Push index.html
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: /tmp/support-packages/output/index.html
          parent: false
          destination: ${{ inputs.support-packages-index-bucket }}

      - name: Push index.html to public bucket
        uses: 'google-github-actions/upload-cloud-storage@v2'
        if: github.event_name != 'pull_request'
        with:
          path: /tmp/support-packages/output/index.html
          parent: false
          destination: ${{ inputs.public-support-packages-bucket }}

  copy-to-merged-bucket:
    runs-on: ubuntu-latest
    needs:
    - sync-drivers
    steps:
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_COLLECTOR_SVC_ACCT }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Copy files to merged bucket
        run: |
          gsutil -m cp -r 'gs://${{ inputs.all-archs-drivers-bucket }}/*' \
            gs://${{ inputs.merged-drivers-bucket }}/
