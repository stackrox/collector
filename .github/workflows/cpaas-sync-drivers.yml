name: Sync CPaaS built drivers with GCP

on:
  workflow_call:
    inputs:
      support-packages-bucket:
        type: string
        required: true
        description: |
          Bucket where CPaaS support packages will be pushed to.
      drivers-bucket:
        type: string
        required: true
        description: |
          Bucket where CPaaS drivers will be pushed to.
      branch-name:
        type: string
        required: true
        description: Branch CI is running on

jobs:
  sync-drivers:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
        - x86_64
        - s390x
        - ppc64le

    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v2
        with:
          registry: brew.registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Download driver image and extract files
        run: |
          docker create \
            --platform linux/${{ matrix.platform }} \
            --name drivers \
            --pull always \
            brew.registry.redhat.io/rh-osbs/rhacs-drivers-build-rhel8:0.1.0

          TMP_DIR="$(mktemp -d)"
          {
            echo "FAILURES_DIR=${TMP_DIR}/FAILURES"
            echo "DRIVER_TMP_DIR=${TMP_DIR}/kernel-modules"
            echo "SUPPORT_PACKAGE_TMP_DIR=${TMP_DIR}/support-packages"
          } >> "$GITHUB_ENV"

          docker cp drivers:/FAILURES/ "${TMP_DIR}"
          docker cp drivers:/kernel-modules/ "${TMP_DIR}"
          docker cp drivers:/support-packages/ "${TMP_DIR}"

      - name: Upload failure logs
        uses: actions/upload-artifact@v3
        with:
          name: drivers-build-failures
          if-no-files-found: ignore
          path: |
            ${{ env.FAILURES_DIR }}
          retention-days: 7

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_COLLECTOR_SVC_ACCT }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Push drivers
        run : |
          shopt -s nullglob
          shopt -s dotglob

          for driver_version_dir in "${DRIVER_TMP_DIR}"/*; do
            files=("${driver_version_dir}"/*.{gz,unavail})
            [[ "${#files[@]}" -gt 0 ]] || continue
            printf '%s\n' "${files[@]}" | \
              gsutil -m cp -n -I "gs://${{ inputs.drivers-bucket }}/${{ matrix.platform }}/$(basename "${driver_version_dir}")/"
          done

      - name: Generate 'latest' files
        run: |
          set -x

          while read -r version original_file; do
            VERSION_PATH="${SUPPORT_PACKAGE_TMP_DIR}/${version}"
            latest_file="support-pkg-${version}-latest.zip"

            cp "${VERSION_PATH}/${original_file}" "${VERSION_PATH}/${latest_file}"
            echo "${original_file}" > "${VERSION_PATH}/latest"
            (
              cd "${VERSION_PATH}"
              sha256sum "${latest_file}" > "${latest_file}.sha256"
            )
          done < <(find "${SUPPORT_PACKAGE_TMP_DIR}" -name '*.zip' -type f |
            awk '{split($0,array,"/"); print array[5] " " array[6]}')

      - name: Push support-packages
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: ${{ env.SUPPORT_PACKAGE_TMP_DIR }}
          parent: false
          destination: ${{ inputs.support-packages-bucket }}/${{ matrix.platform }}

  check-drivers-failures:
    uses: ./.github/workflows/check-drivers-failures.yml
    needs: sync-drivers
    secrets: inherit
    with:
      logs-artifact:
        drivers-build-failures

  update-index:
    runs-on: ubuntu-latest
    needs: sync-drivers
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_COLLECTOR_SVC_ACCT }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - uses: ./.github/actions/support-package-metadata
        with:
          branch-name: ${{ inputs.branch-name }}

      - uses: ./.github/actions/support-packages-index
        with:
          gcp-bucket: ${{ inputs.support-packages-bucket }}
          metadata-path: /tmp/support-packages/metadata
          output-path: /tmp/support-packages/output

      - name: Push index.html
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: /tmp/support-packages/output/index.html
          parent: false
          destination: ${{ inputs.support-packages-bucket }}
