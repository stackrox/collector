name: CPaaS related workflows

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_call:

jobs:
  init:
    uses: ./.github/workflows/init.yml

  sync-drivers-and-support-packages:
    uses: ./.github/workflows/cpaas-sync-drivers.yml
    needs: init
    secrets: inherit
    with:
      support-packages-bucket: ${{ needs.init.outputs.cpaas-support-packages-bucket }}
      support-packages-index-bucket: ${{ needs.init.outputs.support-packages-index-bucket }}
      public-support-packages-bucket: ${{ needs.init.outputs.public-support-packages-bucket }}
      drivers-bucket: ${{ needs.init.outputs.cpaas-drivers-bucket }}
      branch-name: ${{ needs.init.outputs.branch-name }}

  check-drivers-failures:
    uses: ./.github/workflows/check-drivers-failures.yml
    needs: sync-drivers-and-support-packages
    with:
      logs-artifact:
        drivers-build-failures

  build-collector-slim:
    uses: ./.github/workflows/collector-slim.yml
    needs: init
    with:
      collector-tag: ${{ needs.init.outputs.collector-tag }}-cpaas
      collector-image: ${{ needs.init.outputs.collector-image }}-cpaas
    secrets: inherit

  build-collector-full:
    uses: ./.github/workflows/collector-full.yml
    with:
      collector-tag: ${{ needs.init.outputs.collector-tag }}-cpaas
      drivers-bucket: ${{ needs.init.outputs.cpaas-drivers-bucket }}/x86_64
      skip-built-drivers: true
      max-layer-depth: "1"
      build-full-image: true
    secrets: inherit
    needs:
    - init
    - build-collector-slim
    - sync-drivers-and-support-packages

  integration-tests:
    uses: ./.github/workflows/integration-tests-vm-type.yml
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip-integration-tests') }}
    strategy:
      # ensure that if one part of the matrix fails, the
      # rest will continue
      fail-fast: false
      matrix:
        vm_type:
          - rhel
          - rhel-sap
    with:
      vm_type: ${{ matrix.vm_type }}
      collector-tag: ${{ needs.init.outputs.collector-tag }}-cpaas
      offline-mode: true
    needs:
    - init
    - build-collector-full
    secrets: inherit

  notify:
    runs-on: ubuntu-latest
    if: always() && contains(join(needs.*.result, ','), 'failure') && github.event_name == 'schedule'
    needs:
    - init
    - sync-drivers-and-support-packages
    - build-collector-slim
    - build-collector-full
    - integration-tests
    steps:
      - name: Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_COLLECTOR_NOTIFICATIONS_WEBHOOK }}
          SLACK_CHANNEL: collector-notifications
          SLACK_COLOR: failure
          SLACK_LINK_NAMES: true
          SLACK_TITLE: Downstream nightly failed
          MSG_MINIMAL: actions url,commit
          SLACK_MESSAGE: |
            @acs-collector-team
