name: Build collector drivers

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  parallel-builds:
    runs-on: ubuntu-latest
    outputs:
      parallel: ${{ steps.set-parallel.outputs.parallel }}

    steps:
      - name: Set number of parallel builds
        id: set-parallel
        shell: python
        run : |
          import json
          parallel_jobs=32

          parallel = [ a for a in range(parallel_jobs)]
          print(f'::set-output name=parallel::{json.dumps(parallel)}')

  split-tasks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false

      - name: Patch files
        run: |
          # Initialize just the falco submodule
          git submodule update --init ${{ github.workspaceÂ }}/falcosecurity-libs

          CHECKOUT_BEFORE_PATCHING=false \
          DOCKERIZED=1 \
          ${{ github.workspace }}/kernel-modules/dockerized/scripts/patch-files.sh \
            ${{ github.head_ref }} \
            false \
            ${{ github.workspace }} \
            kernel-modules/build/prepare-src \
            /tmp

      - name: Get build tasks
        run: |
          USE_KERNELS_FILE=true \
          KERNELS_FILE=${{ github.workspace }}/kernel-modules/KERNEL_VERSIONS \
          DOCKERIZED=1 \
          OUTPUT_DIR=/tmp \
          CACHE_DIR=/tmp \
          BLOCKLIST_DIR=${{ github.workspace }}/kernel-modules \
          SCRIPTS_DIR=${{ github.workspace }}/kernel-modules/build \
            ${{ github.workspace }}/kernel-modules/dockerized/scripts/get-build-tasks.sh

          mkdir -p /tmp/tasks
          mv /tmp/build-tasks /tmp/tasks/all

          TASKS_DIR=/tmp/tasks \
          RHEL8_BUILDERS=8 \
            ${{ github.workspace }}/.openshift-ci/drivers/scripts/kernel-splitter.py

      - name: Store tasks and sources
        uses: actions/upload-artifact@v3
        with:
          name: tasks-and-sources
          path: |
            /tmp/kobuild-tmp/versions-src/
            /tmp/tasks/**/**/all
          retention-days: 7

  build-drivers:
    runs-on: ubuntu-latest
    needs:
      - parallel-builds
      - split-tasks

    strategy:
      matrix:
        builder: ${{ fromJSON(needs.parallel-builds.outputs.parallel) }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false

      - name: Restore tasks and sources
        uses: actions/download-artifact@v3
        with:
          name: tasks-and-sources
          path: /tmp

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_COLLECTOR_SVC_ACCT }}'

      - name: Build builders
        run: |
          for builder in fc36 rhel8 rhel7; do
            docker build --tag "${builder}:latest" \
              -f ${{ github.workspace }}/.github/driver-builders/${builder}.Dockerfile \
              ${{ github.workspace }}/kernel-modules/build/
          done

      - name: Build drivers
        run: |
          mkdir -p /tmp/{output,bundles,FAILURES}

          for builder in fc36 rhel8 rhel7; do
            # Download bundles for current builder
            awk '{ print "gs://collector-kernel-bundles-public/bundle-"$1".tgz" }' "/tmp/tasks/${builder}/${{ matrix.builder }}/all" |
              sort | uniq | gsutil -m cp -I /tmp/bundles

            docker run --rm -i \
              -v /tmp/tasks:/tasks:ro \
              -v /tmp/kobuild-tmp/versions-src:/kobuild-tmp/versions-src \
              -v /tmp/output:/kernel-modules \
              -v /tmp/bundles:/bundles:ro \
              -v /tmp/FAILURES:/FAILURES \
              -e DOCKERIZED=1 \
              --name "${builder}" \
              "${builder}:latest" < <(head -n1 "/tmp/tasks/${builder}/${{ matrix.builder }}/all")

            rm -rf /tmp/bundles/*
          done

          ls -la /tmp/output

      - name: Store built drivers
        uses: actions/upload-artifact@v3
        with:
          name: built-drivers
          path: /tmp/output
          retention-days: 1
