name: Run global initialization of CI

on:
  workflow_call:
    inputs:
      cpaas-workflow:
        description: true if running from the CPaaS workflow
        type: boolean
        required: true
    outputs:
      collector-tag:
        description: The tag used when building collector
        value: ${{ jobs.common-variables.outputs.collector-tag }}
      collector-qa-tag:
        description: The tag used for QA containers
        value: ${{ jobs.common-variables.outputs.collector-qa-tag }}
      collector-image:
        description: |
          The image built by running `make image` in the collector repo
        value: ${{ jobs.common-variables.outputs.collector-image }}
      branch-name:
        description: |
          Branch CI is running on
        value: ${{ jobs.common-variables.outputs.branch-name }}
      drivers-bucket:
        description: Bucket used to pull collector drivers from
        value: ${{ jobs.common-variables.outputs.drivers-bucket }}
      merged-drivers-bucket:
        description: Bucket used to push collector drivers into
        value: ${{ jobs.common-variables.outputs.merged-drivers-bucket }}
      push-drivers-bucket:
        description: Bucket used to push collector drivers into
        value: ${{ jobs.common-variables.outputs.push-drivers-bucket }}
      bundles-bucket:
        description: |
          Bucket used to download kernel bundles when building drivers
        value: ${{ jobs.common-variables.outputs.bundles-bucket }}
      support-packages-bucket:
        description: |
          Bucket to push built support-packages into
        value: ${{ jobs.common-variables.outputs.support-packages-bucket }}
      public-support-packages-bucket:
        description: |
          Public bucket to push built support-packages into
        value: ${{ jobs.common-variables.outputs.public-support-packages-bucket }}
      cpaas-support-packages-bucket:
        description: |
          Bucket to push CPaaS built support-packages into
        value: ${{ jobs.common-variables.outputs.cpaas-support-packages-bucket }}
      cpaas-drivers-bucket:
        description: |
          Bucket to push CPaaS built drivers into
        value: ${{ jobs.common-variables.outputs.cpaas-drivers-bucket }}
      cpaas-all-archs-drivers-bucket:
        description: |
          Bucket to push CPaaS built drivers for all archs into
        value: ${{ jobs.common-variables.outputs.cpaas-all-archs-drivers-bucket }}
      support-packages-index-bucket:
        description: |
          Bucket to push the generated support-packages index file into
        value: ${{ jobs.common-variables.outputs.support-packages-index-bucket }}
      rebuild-qa-containers:
        description: |
          Trigger rebuild of QA containers
        value: ${{ jobs.common-variables.outputs.rebuild-qa-containers }}
      module-version:
        description: |
          The version of the drivers to use in this build
        value: ${{ jobs.common-variables.outputs.module-version }}

jobs:
  common-variables:
    runs-on: ubuntu-latest
    outputs:
      collector-tag: ${{ steps.collector-env.outputs.collector-tag }}
      collector-qa-tag: ${{ steps.collector-env.outputs.collector-qa-tag }}
      collector-image: ${{ steps.collector-env.outputs.collector-image }}
      branch-name: ${{ steps.collector-env.outputs.branch-name }}
      drivers-bucket: ${{ steps.gcp-buckets.outputs.drivers-bucket }}
      merged-drivers-bucket: ${{ steps.gcp-buckets.outputs.merged-drivers-bucket }}
      push-drivers-bucket: ${{ steps.gcp-buckets.outputs.push-drivers-bucket }}
      bundles-bucket: ${{ steps.gcp-buckets.outputs.bundles-bucket }}
      support-packages-bucket: ${{ steps.gcp-buckets.outputs.support-packages-bucket }}
      public-support-packages-bucket: ${{ steps.gcp-buckets.outputs.public-support-packages-bucket }}
      cpaas-drivers-bucket: ${{ steps.gcp-buckets.outputs.cpaas-drivers-bucket }}
      cpaas-all-archs-drivers-bucket: ${{ steps.gcp-buckets.outputs.cpaas-all-archs-drivers-bucket }}
      cpaas-support-packages-bucket: ${{ steps.gcp-buckets.outputs.cpaas-support-packages-bucket }}
      support-packages-index-bucket: ${{ steps.gcp-buckets.outputs.support-packages-index-bucket }}
      rebuild-qa-containers: ${{ steps.filter.outputs.container }}
      module-version: ${{ steps.module-version.outputs.module-version }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          list-files: shell

          # Only trigger a rebuild when the QA tag has changed
          filters: |
            container:
              - integration-tests/container/QA_TAG

      - name: Set collector environment variables
        id: collector-env
        run: |
          if [[ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]]; then
            COLLECTOR_TAG="${{ github.ref_name }}"
          else
            COLLECTOR_TAG="$(make tag)"
          fi

          COLLECTOR_QA_TAG="$(cat ${{ github.workspace }}/integration-tests/container/QA_TAG)"
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" && "${{ steps.filter.outputs.container }}" == "true" ]]; then
            COLLECTOR_QA_TAG="${COLLECTOR_QA_TAG}-${COLLECTOR_TAG}"
          fi

          {
            echo "collector-tag=${COLLECTOR_TAG}"
            echo "collector-qa-tag=${COLLECTOR_QA_TAG}"
            echo "collector-image=quay.io/stackrox-io/collector:${COLLECTOR_TAG}"
          } >> "$GITHUB_OUTPUT"

          if [[ ${{ github.event_name }} == "pull_request" ]]; then
            echo "branch-name=${GITHUB_HEAD_REF}" >> "$GITHUB_OUTPUT"
          else
            echo "branch-name=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          fi

      - name: Set GCP buckets
        id: gcp-buckets
        run: |
          STAGING_RELATIVE_PATH="${GITHUB_HEAD_REF}/${{ github.run_id }}"

          MAIN_DRIVER_BUCKET="collector-modules-osci"
          MERGED_DRIVER_BUCKET="${MAIN_DRIVER_BUCKET}/merged-build"
          STAGING_DRIVER_BUCKET="stackrox-collector-modules-staging/pr-builds/${STAGING_RELATIVE_PATH}"
          STAGING_MERGED_DRIVER_BUCKET="${STAGING_DRIVER_BUCKET}/merged-build"
          BUNDLES_BUCKET="collector-kernel-bundles-public"
          SUPPORT_PACKAGES_BUCKET="sr-roxc/collector/support-packages"
          STAGING_SUPPORT_PACKAGES_BUCKET="${SUPPORT_PACKAGES_BUCKET}/${STAGING_RELATIVE_PATH}"
          PUBLIC_SUPPORT_PACKAGES_BUCKET="collector-support-public/offline/v1/support-packages"

          CPAAS_DRIVERS_BUCKET="${MAIN_DRIVER_BUCKET}/cpaas"
          CPAAS_ALL_ARCHS_DRIVERS_BUCKET="${CPAAS_DRIVERS_BUCKET}/all-archs"
          CPAAS_STAGING_DRIVERS_BUCKET="${STAGING_DRIVER_BUCKET}/cpaas"
          CPAAS_STAGING_ALL_ARCHS_DRIVERS_BUCKET="${CPAAS_STAGING_DRIVERS_BUCKET}/all-archs"
          CPAAS_SUPPORT_PACKAGES_BUCKET="${SUPPORT_PACKAGES_BUCKET}"
          CPAAS_STAGING_SUPPORT_PACKAGES_BUCKET="${STAGING_SUPPORT_PACKAGES_BUCKET}"

          {
            echo "drivers-bucket=${MAIN_DRIVER_BUCKET}"
            echo "bundles-bucket=${BUNDLES_BUCKET}"
            echo "public-support-packages-bucket=${PUBLIC_SUPPORT_PACKAGES_BUCKET}"
          } >> "$GITHUB_OUTPUT"

          if [[ ${{ github.event_name }} == "pull_request" ]]; then
            {
              echo "push-drivers-bucket=${STAGING_DRIVER_BUCKET}"
              echo "merged-drivers-bucket=${STAGING_MERGED_DRIVER_BUCKET}"
              echo "support-packages-bucket=${STAGING_SUPPORT_PACKAGES_BUCKET}"
              if [[ "${{ inputs.cpaas-workflow }}" == "true" &&
                    "${{ contains(github.event.pull_request.labels.*.name, 'run-cpaas-steps') }}" == "true" ]]; then
                  echo "cpaas-drivers-bucket=${CPAAS_STAGING_DRIVERS_BUCKET}"
                  echo "cpaas-all-archs-drivers-bucket=${CPAAS_STAGING_ALL_ARCHS_DRIVERS_BUCKET}"
                  echo "cpaas-support-packages-bucket=${CPAAS_STAGING_SUPPORT_PACKAGES_BUCKET}"
              else
                  # When running on PRs withouth the 'run-cpaas-steps' label, use the main buckets
                  echo "cpaas-drivers-bucket=${CPAAS_DRIVERS_BUCKET}"
                  echo "cpaas-all-archs-drivers-bucket=${CPAAS_ALL_ARCHS_DRIVERS_BUCKET}"
                  echo "cpaas-support-packages-bucket=${CPAAS_SUPPORT_PACKAGES_BUCKET}"
              fi
              echo "support-packages-index-bucket=${STAGING_SUPPORT_PACKAGES_BUCKET}"
            } >> "$GITHUB_OUTPUT"
          else
            {
              echo "push-drivers-bucket=${MAIN_DRIVER_BUCKET}"
              echo "merged-drivers-bucket=${MERGED_DRIVER_BUCKET}"
              echo "support-packages-bucket=${SUPPORT_PACKAGES_BUCKET}"
              echo "cpaas-drivers-bucket=${CPAAS_DRIVERS_BUCKET}"
              echo "cpaas-all-archs-drivers-bucket=${CPAAS_ALL_ARCHS_DRIVERS_BUCKET}"
              echo "cpaas-support-packages-bucket=${CPAAS_SUPPORT_PACKAGES_BUCKET}"
              echo "support-packages-index-bucket=${SUPPORT_PACKAGES_BUCKET}"
            } >> "$GITHUB_OUTPUT"
          fi

      - name: Set module version
        id: module-version
        run: |
          echo "module-version=$(cat ${{ github.workspace }}/kernel-modules/MODULE_VERSION)" >> "$GITHUB_OUTPUT"

