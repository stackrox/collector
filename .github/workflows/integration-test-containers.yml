name: Build Integration Test Containers

on:
  workflow_call:
    outputs:
      qa-tag:
        description: The QA tag used to build the containers
        value: ${{ jobs.common-variables.outputs.qa-tag }}

    inputs:
      branch-name:
        description: The name of the branch the workflow is running on
        required: true
        type: string

jobs:
  test-containers:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.container }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: shell

          # Filter on changes strictly in subdirectories within
          # integration-test/container
          # (i.e. exclude files in integration-tests/container itself)
          filters: |
            container:
              - integration-tests/container/**

  common-variables:
    needs: test-containers
    runs-on: ubuntu-latest
    outputs:
      qa-tag: ${{ steps.variables.outputs.qa-tag }}
      build-dirs: ${{ steps.variables.outputs.build-dirs }}
      do-rebuild: ${{ steps.variables.outputs.do-rebuild }}

    steps:
      - uses: actions/checkout@v3

      - name: Set variables
        id: variables
        run: |
          if [[ "$BUILD_QA_CONTAINERS" == 'true' ]]; then
            qa_tag="$(echo "${GITHUB_SHA}" | cut -c1-8)"
          else
            qa_tag="${{ inputs.branch-name }}"
          fi

          dirs=$(find integration-tests/container/ -type d -mindepth 1 -maxdepth 1)
          if [[ "${{ inputs.branch-name }}" =~ release-.* ]] || [[ "$BUILD_QA_CONTAINERS" == "true" ]]; then
            #
            # If we're building all qa images (on a PR with the right label or on a release branch)
            # we have to build everything, because the new images are tagged,
            # and that tag is passed to the integration tests and applied to all images.
            #
            do_rebuild="true"
          else
            #
            # On master we have the luxury of only building things that have changed,
            # because the QA tag is not applied (instead we'll update the floating tags)
            #
            do_rebuild="${{ needs.test-containers.outputs.changed }}"
          fi

          # convert to json array so it can be used in the matrix
          json_dirs="$(echo "$dirs" | jq --raw-input --slurp 'split("\n") | map(select(. != ""))')"

          {
            echo "build-dirs<<EOS"
            echo "$json_dirs"
            echo "EOS"

            echo "qa-tag=$qa_tag"
            echo "do-rebuild=$do_rebuild"
          } >> "$GITHUB_OUTPUT"
        env:
          BUILD_QA_CONTAINERS: ${{ contains(github.event.pull_request.labels.*.name, 'build-qa-containers') }}

  rebuild-containers:
    needs:
      - test-containers
      - common-variables

    if: needs.common-variables.outputs.do-rebuild == 'true'
    runs-on: ubuntu-latest
    env:
      CONTAINER_DIRS: ${{ needs.common-variables.outputs.build-dirs }}
      COLLECTOR_QA_TAG: ${{ needs.common-variables.outputs.qa-tag }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, ppc64le, s390x]
        container: ${{ fromJSON(needs.common-variables.outputs.build-dirs) }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to quay.io/rhacs-eng
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Build and Push containers
        run: |
          make -C "${{ matrix.container }}" build-and-push
        env:
          PLATFORM: linux/${{ matrix.arch }}

  push-manifest:
    runs-on: ubuntu-latest
    needs:
      - rebuild-containers
      - test-containers
      - common-variables
    if: needs.common-variables.outputs.do-rebuild == 'true'
    env:
      CONTAINER_DIRS: ${{ needs.common-variables.outputs.build-dirs }}
      COLLECTOR_QA_TAG: ${{ needs.common-variables.outputs.qa-tag }}
    strategy:
      matrix:
        container: ${{ fromJSON(needs.common-variables.outputs.build-dirs) }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to quay.io/rhacs-eng
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Make manifests
        run: |
          make -C "${{ matrix.container }}" manifest

