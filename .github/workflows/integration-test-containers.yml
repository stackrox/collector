name: Build Integration Test Containers

on:
  workflow_call:
    outputs:
      qa-tag:
        description: The QA tag used to build the containers
        value: ${{ jobs.common-variables.outputs.qa-tag }}

jobs:
  test-containers:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.container }}
      changed_files: ${{ steps.filter.outputs.container_files }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: shell
          filters: |
            container:
              - integration-tests/container/**

  common-variables:
    needs: test-containers
    runs-on: ubuntu-latest
    outputs:
      qa-tag: ${{ steps.variables.outputs.qa-tag }}
      build-dirs: ${{ steps.variables.outputs.build-dirs}}

    steps:
      - uses: actions/checkout@v3

      - name: Set variables
        id: variables
        run: |
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'build-qa-images') }}" == 'true' ]]; then
            dirs=$(find integration-tests/container/ -type d)
          else
            dirs=$(dirname ${{ needs.test-containers.outputs.changed_files }} | sort | uniq )
          fi

          {
            echo "build-dirs<<EOS"
            echo "$dirs"
            echo "EOS"
          } >> "$GITHUB_OUTPUT"

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "qa-tag=$(echo "${GITHUB_SHA}" | cut -c1-8)" >> "$GITHUB_OUTPUT"
          else
            echo "qa-tag=" >> "$GITHUB_OUTPUT"
          fi

  rebuild-containers:
    needs:
      - test-containers
      - common-variables

    if: needs.test-containers.outputs.changed == 'true' || contains(github.event.pull_request.labels.*.name, 'build-qa-images')
    runs-on: ubuntu-latest
    env:
      CONTAINER_DIRS: ${{ needs.common-variables.outputs.build-dirs }}
      COLLECTOR_QA_TAG: ${{ needs.common-variables.outputs.qa-tag }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, ppc64le, s390x]

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to quay.io/rhacs-eng
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Buld and Push containers
        run: |
          for dir in $CONTAINER_DIRS; do
            if [[ -f "$dir/Makefile" ]]; then
              make -C "$dir" build-and-push
            fi
          done
        env:
          PLATFORM: linux/${{ matrix.arch }}

  push-manifest:
    runs-on: ubuntu-latest
    needs:
      - rebuild-containers
      - test-containers
      - common-variables
    if: needs.test-containers.outputs.changed == 'true' || contains(github.event.pull_request.labels.*.name, 'build-qa-images')
    env:
      CONTAINER_DIRS: ${{ needs.common-variables.outputs.build-dirs }}
      COLLECTOR_QA_TAG: ${{ needs.common-variables.outputs.qa-tag }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to quay.io/rhacs-eng
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}

      - name: Make manifests
        run: |
          for dir in $CONTAINER_DIRS; do
            if [[ -f "$dir/Makefile" ]]; then
              make -C "$dir" manifest
            fi
          done

