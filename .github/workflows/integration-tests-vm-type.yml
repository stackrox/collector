name: Collector Integration Tests

on:
  workflow_call:
    inputs:
      vm_type:
        description: |
          Type of VM to run integration tests on. e.g. rhel or ubuntu-os
        type: string
        required: true
      collector-tag:
        description: |
          Tag used for running the integration tests
        type: string
        required: true
      collector-qa-tag:
        description: |
          Tag used for QA containers
        type: string
        required: true
      offline-mode:
        description: |
          Set to true to enable collector running in offline mode
        type: boolean
        default: false
      run-benchmarks:
        description: |
          Whether to run the benchmarks instead of the integration tests
        type: boolean
        default: false
      job-tag:
        description: |
          Used to differentiate between different sources when creating
          VMs in GCP.
        type: string
        default: ""

jobs:
  tests:
    name: Testing ${{ inputs.vm_type }}
    runs-on: ubuntu-latest
    env:
      COLLECTOR_IMAGE: quay.io/rhacs-eng/collector:${{ inputs.collector-tag }}
      COLLECTOR_QA_TAG: ${{ inputs.collector-qa-tag }}
      TEST_IMAGE: quay.io/rhacs-eng/qa-multi-arch:collector-tests-${{ inputs.collector-tag }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: '1.19' # to match the requirement in the integration tests

      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_COLLECTOR_SVC_ACCT }}'

      - name: Setup GCP
        uses: 'google-github-actions/setup-gcloud@v1'

      - uses: ./.github/actions/setup-vm-creds
        with:
          gcp-ssh-key: ${{ secrets.GCP_SSH_KEY }}
          gcp-ssh-key-pub: ${{ secrets.GCP_SSH_KEY_PUB }}
          s390x-ssh-key: ${{ secrets.IBM_CLOUD_S390X_SSH_PRIVATE_KEY }}
          ppc64le-ssh-key: ${{ secrets.IBM_CLOUD_POWER_SSH_PRIVATE_KEY }}
          ppc64le-ssh-key-pub: ${{ secrets.IBM_CLOUD_POWER_SSH_PUBLIC_KEY }}
          s390x-key: ${{ secrets.IBM_CLOUD_S390x_API_KEY }}
          ppc64le-key: ${{ secrets.IBM_CLOUD_POWER_API_KEY }}
          redhat-username: ${{ secrets.REDHAT_USERNAME }}
          redhat-password: ${{ secrets.REDHAT_PASSWORD }}
          vm-type: ${{ inputs.vm_type }}
          job-tag: ${{ inputs.job-tag }}

      - name: Create Test VMs
        if: ${{ ! inputs.run-benchmarks }}
        run: |
          make -C "${{ github.workspace }}/ansible" create-ci-vms

      - name: Run Tests
        if: ${{ ! inputs.run-benchmarks }}
        run: |
          if [[ "${{ inputs.offline-mode }}" == "true" ]]; then
            export COLLECTOR_OFFLINE_MODE="true"
          fi

          make -C "${{ github.workspace }}/ansible" integration-tests
        env:
          QUAY_RHACS_ENG_RO_USERNAME: ${{ secrets.QUAY_RHACS_ENG_RO_USERNAME }}
          QUAY_RHACS_ENG_RO_PASSWORD: ${{ secrets.QUAY_RHACS_ENG_RO_PASSWORD }}

      - name: Create Benchmark VMs
        if: inputs.run-benchmarks
        run: |
          make -C "${{ github.workspace }}/ansible" create-benchmark-vms

      - name: Run Benchmarks
        if: inputs.run-benchmarks
        run: make -C "${{ github.workspace }}/ansible" benchmarks
        env:
          QUAY_RHACS_ENG_RO_USERNAME: ${{ secrets.QUAY_RHACS_ENG_RO_USERNAME }}
          QUAY_RHACS_ENG_RO_PASSWORD: ${{ secrets.QUAY_RHACS_ENG_RO_PASSWORD }}

      - name: Teardown VMs
        if: always()
        run: make -C "${{ github.workspace }}/ansible" destroy-vms

      - name: Store artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.vm_type }}-logs
          path: |
            ${{ github.workspace }}/integration-tests/container-logs/**/*
            ${{ github.workspace }}/integration-tests/performance-logs/**/*
