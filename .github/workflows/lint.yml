name: Lint

on:
  workflow_call:
    inputs:
      collector-builder-tag:
        type: string
        required: true
        description: |
          The builder tag to use in the build

jobs:
  lint:
    runs-on: ubuntu-24.04
    container:
      image: fedora:41
    steps:
      - name: dnf install dependencies
        run: |
          dnf install -y \
            git \
            golang \
            shellcheck \
            clang-tools-extra

          echo "PATH=${HOME}/bin:${PATH}" >> "${GITHUB_ENV}"

      - uses: actions/checkout@v4
        with:
          # fetch all to allow linting of differences between branches
          fetch-depth: 0

      - name: Mark repo as safe
        run: |
          git config --global --add safe.directory "${GITHUB_WORKSPACE}"

      - uses: actions/setup-python@v5

      - name: Install shfmt
        run: |
          GOBIN="${HOME}/bin/" go install mvdan.cc/sh/v3/cmd/shfmt@v3.10.0

      - name: Install actionlint
        run: |
          # Install actionlint to ~/bin/, otherwise pre-commit won't be able to find the executable.
          GOBIN="${HOME}/bin/" go install github.com/rhysd/actionlint/cmd/actionlint@latest

      - name: Run pre-commit
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install pre-commit
          pre-commit run --show-diff-on-failure --color=always --all-files

  clang-tidy:
    runs-on: ubuntu-24.04
    container:
      image: quay.io/stackrox-io/collector-builder:${{ inputs.collector-builder-tag }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: dorny/paths-filter@v3
        id: changed
        with:
          list-files: shell
          filters: |
            collector:
              - collector/*.cpp
              - collector/lib/*.cpp
              - collector/lib/*.h
              - collector/test/*.cpp

      - name: Run clang-tidy
        if: steps.changed.outputs.collector
        run: |
          mkdir -p cmake-build/
          cmake -S . -B cmake-build/ -DDISABLE_PROFILING=ON
          # rox-proto generates some files required for clang-tidy to fully work
          make -C cmake-build/ rox-proto
          clang-tidy -p cmake-build/ ${{ steps.changed.outputs.collector_files }}
