name: Collector Drivers CI

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - reopened

jobs:
  init:
    uses: ./.github/workflows/init.yml
    secrets: inherit
    with:
      cpaas-workflow: false

  build-drivers:
    uses: ./.github/workflows/drivers.yml
    with:
      drivers-bucket: ${{ needs.init.outputs.drivers-bucket }}
      bundles-bucket: ${{ needs.init.outputs.bundles-bucket }}
      branch-name: ${{ needs.init.outputs.branch-name }}
    needs: init
    secrets: inherit

  upload-drivers:
    uses: ./.github/workflows/upload-drivers.yml
    with:
      gcp-bucket: ${{ needs.init.outputs.push-drivers-bucket }}
      merged-drivers-bucket: ${{ needs.init.outputs.merged-drivers-bucket }}
    if: ${{ needs.build-drivers.outputs.parallel-jobs > 0 }}
    needs:
    - init
    - build-drivers
    secrets: inherit

  check-drivers-build:
    uses: ./.github/workflows/check-drivers-failures.yml
    needs: build-drivers
    if: ${{ needs.build-drivers.outputs.parallel-jobs > 0 }}
    secrets: inherit
    with:
      logs-artifact: driver-build-failures-*

  build-support-packages:
    uses: ./.github/workflows/support-packages.yml
    with:
      branch-name: ${{ needs.init.outputs.branch-name }}
      upstream-drivers-bucket: ${{ needs.init.outputs.drivers-bucket }}
      downstream-drivers-bucket: ${{ needs.init.outputs.cpaas-drivers-bucket }}/x86_64
      support-packages-bucket: ${{ needs.init.outputs.support-packages-bucket }}
      support-packages-index-bucket: ${{ needs.init.outputs.support-packages-index-bucket }}
      public-support-packages-bucket: ${{ needs.init.outputs.public-support-packages-bucket }}
    if: |
      always() &&
      ((github.event_name == 'push' && github.ref_name == 'master') ||
      contains(github.event.pull_request.labels.*.name, 'test-support-packages'))
    needs:
    - init
    - build-drivers
    - upload-drivers
    secrets: inherit

  notify:
    runs-on: ubuntu-latest
    if: always() && contains(join(needs.*.result, ','), 'failure') && github.event_name == 'push'
    needs:
    - init
    - build-drivers
    - upload-drivers
    steps:
      - name: Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_COLLECTOR_ONCALL_WEBHOOK }}
          SLACK_CHANNEL: team-acs-collector-oncall
          SLACK_COLOR: failure
          SLACK_LINK_NAMES: true
          SLACK_TITLE: Driver workflow failed
          MSG_MINIMAL: actions url,commit
          SLACK_MESSAGE: |
            @acs-collector-oncall
