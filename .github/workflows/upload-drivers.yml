name: Upload drivers to GCP

on:
  workflow_call:
    inputs:
      gcp-bucket:
        type: string
        required: true
        description: GCP bucket to push drivers into
      merged-drivers-bucket:
        type: string
        required: true
        description: GCP bucket unifying upstream and downstream drivers

jobs:
  upload-drivers:
    runs-on: ubuntu-latest

    steps:
      - name: Restore built drivers
        uses: actions/download-artifact@v4
        with:
          pattern: built-drivers-*
          merge-multiple: true
          path: /tmp/output/

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_COLLECTOR_SVC_ACCT }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Push drivers
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: /tmp/output/
          parent: false
          destination: ${{ inputs.gcp-bucket }}

      - name: Push to merged bucket
        run: |
         shopt -s nullglob
         shopt -s dotglob

          # We use gsutil here because we need to ignore files that already
          # exist in the bucket, if they are there it means downstream
          # built it and has prevalence over this set of drivers.
          for driver_version_dir in /tmp/output/*; do
            files=("${driver_version_dir}"/*.{gz,unavail})
            driver_version="$(basename "${driver_version_dir}")"
            [[ "${#files[@]}" -gt 0 ]] || continue

            printf '%s\n' "${files[@]}" | \
              gsutil -m cp -n -I "gs://${{ inputs.merged-drivers-bucket }}/${driver_version}/"
          done
