apiVersion: tekton.dev/v1
kind: PipelineRun

metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/stackrox/collector?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "500"
    # TODO(ROX-21073): re-enable for all PR branches
    pipelinesascode.tekton.dev/on-cel-expression: (event == "push" && target_branch == "master") || (event == "pull_request" && (source_branch.contains("rhtap") || source_branch.contains("appstudio") || source_branch.contains("konflux")))
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: acs
    appstudio.openshift.io/component: collector
    pipelines.appstudio.openshift.io/type: build
  name: collector-build
  namespace: rh-acs-tenant

spec:
  params:
  - name: dockerfile
    value: collector/container/konflux.Dockerfile
  - name: git-url
    value: '{{repo_url}}'
  - name: image-expires-after
    # TODO(ROX-24530): return expiration for non-released images to 13w
    value: '52w'
  - name: output-image-repo
    value: quay.io/rhacs-eng/collector
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  - name: rebuild
    value: 'true'
  # TODO(ROX-20234): Enable hermetic builds
  # - name: hermetic
  #   value: "true"
  # No language dependencies are required for collector image.
  - name: prefetch-input
    value: ''
  - name: clone-depth
    value: '0'
  - name: clone-fetch-tags
    value: 'true'
  - name: clone-submodules
    value: 'true'
  - name: build-source-image
    value: 'true'

  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'

  taskRunSpecs:
  # Only adjusting computeResources for amd64 build because
  # multi-arch builds happen off cluster
  - pipelineTaskName: build-container-amd64
    stepSpecs:
    - name: build
      # CPU requests are increased to speed up builds compared to the defaults.
      # Defaults: https://github.com/redhat-appstudio/build-definitions/blob/main/task/buildah/0.1/buildah.yaml#L126
      computeResources:
        limits:
          cpu: 4
        requests:
          cpu: 4
  - pipelineTaskName: clamav-scan
    stepSpecs:
    # Provision more CPU to speed up ClamAV scan compared to the defaults.
    # https://github.com/redhat-appstudio/build-definitions/blob/main/task/clamav-scan/0.1/clamav-scan.yaml#L48
    - name: extract-and-scan-image
      computeResources:
        requests:
          cpu: 1

  # The pipeline regularly takes >1h to finish.
  timeouts:
    pipeline: 2h00m0s

  pipelineRef:
    name: collector-component-pipeline
