---
#
# This will run the steps for integration testing, for a given collection method.
# and handles creating the report and writing necessary log files.
#
# Args:
#   collection_method: ebpf
#

- set_fact:
    logs_root: "{{ collector_root }}/integration-tests/container-logs/{{ vm_config }}/{{ collection_method }}"

- name: Cleanup old containers
  become: "{{ runtime_as_root }}"
  shell: "{{ runtime_command }} rm -f $({{ runtime_command }} ps -aq) >/dev/null 2>&1 || true"

- block:
  - name: Run integration tests
    shell: "make -C {{ collector_root }}/integration-tests {{ collector_test }}"
    environment:
      COLLECTION_METHOD: "{{ collection_method }}"
      REMOTE_HOST_TYPE: ssh
      SSH_ADDRESS: "{{ ansible_host }}"
      SSH_PORT: "{{ ansible_port }}"
      SSH_USER: "{{ ansible_user }}"
      SSH_KEY_PATH: "{{ ansible_ssh_private_key_file }}"
      VM_CONFIG: "{{ vm_config }}"
      IMAGE_FAMILY: "{{ vm_image_family }}"
      RUNTIME_COMMAND: "{{ runtime_command }}"
      RUNTIME_AS_ROOT: "{{ runtime_as_root }}"
      RUNTIME_SOCKET: "{{ runtime_socket }}"
    register: test_result
    delegate_to: localhost

  - name: Write integration test log
    copy:
      content: "{{ test_result.stdout }}"
      dest: "{{ logs_root }}/integration-test.log"
    delegate_to: localhost

  - name: Report
    shell: "make -C {{ collector_root }}/integration-tests report"
    environment:
      LOG_FILE: "{{ logs_root }}/integration-test.log"
    delegate_to: localhost

  rescue:
  - name: Set tests as failed
    set_fact:
      success: false

  # If this host is just for a certain collection method, skip running
  # the test if we're not using that collection method.
  when: vm_collection_method == collection_method or vm_collection_method == 'any'
