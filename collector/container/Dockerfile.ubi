ARG BUILD_DIR=/build
ARG SRC_ROOT_DIR=${BUILD_DIR}
ARG CMAKE_BUILD_DIR=${SRC_ROOT_DIR}/cmake-build
ARG USE_VALGRIND=false
ARG ADDRESS_SANITIZER=false

# This builds a collector container based on UBI with a reliance on Red Hat
# subscription entitlements. Subscription registration is only needed to install
# RHEL packages if on a non-RHEL host. (See https://access.redhat.com/solutions/5558771)
FROM registry.access.redhat.com/ubi8/ubi:8.6 AS builder

ARG REDHAT_SUBSCRIPTION_ORG_ID
ARG REDHAT_SUBSCRIPTION_ACTIVATION_KEY

ARG USE_VALGRIND
ENV USE_VALGRIND=${USE_VALGRIND}

ARG ADDRESS_SANITIZER
ENV ADDRESS_SANITIZER=${ADDRESS_SANITIZER}

RUN rm -rf /etc/rhsm-host && \
    subscription-manager register \
    --org "${REDHAT_SUBSCRIPTION_ORG_ID}" \
    --activationkey "${REDHAT_SUBSCRIPTION_ACTIVATION_KEY}"

# hadolint ignore=DL3041
RUN dnf -y update && \
    dnf -y install \
        make \
        cmake \
        gcc-c++ \
        openssl-devel \
        curl-devel \
        libuuid-devel \
        libcap-ng-devel \
        autoconf \
        libtool \
        git \
        elfutils-libelf-devel \
        tbb-devel \
        c-ares-devel && \
    dnf -y --enablerepo amq-clients-2-for-rhel-8-x86_64-rpms install \
        jsoncpp-devel && \
    dnf -y --enablerepo rhocp-4.6-for-rhel-8-x86_64-rpms install \
        jq-devel && \
    if [ "$USE_VALGRIND" = "true" ]; then \
        dnf -y install valgrind; \
    fi && \
    if [ "$ADDRESS_SANITIZER" = "true" ]; then \
        dnf -y install libasan; \
    fi && \
    dnf clean all

ARG BUILD_DIR
ENV BUILD_DIR=${BUILD_DIR}

ARG SRC_ROOT_DIR
ENV SRC_ROOT_DIR=${SRC_ROOT_DIR}

ARG CMAKE_BUILD_DIR
ENV CMAKE_BUILD_DIR=${CMAKE_BUILD_DIR}

ARG CMAKE_BUILD_TYPE=Release
ENV CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}

ARG COLLECTOR_APPEND_CID=false
ENV COLLECTOR_APPEND_CID=${COLLECTOR_APPEND_CID}

ARG NPROCS=8
ENV NPROCS=${NPROCS}

RUN mkdir -p ${BUILD_DIR}
WORKDIR ${BUILD_DIR}

COPY builder builder
COPY kernel-modules/MODULE_VERSION kernel-modules/MODULE_VERSION
COPY collector collector
COPY falcosecurity-libs falcosecurity-libs
COPY third_party third_party
COPY CMakeLists.txt CMakeLists.txt

ENV DISABLE_PROFILING=true
ENV WITH_RHEL8_RPMS=true
RUN ./builder/build/build-ubi-dependencies.sh && \
    ./builder/build/build-collector.sh && \
    "${CMAKE_BUILD_DIR}/collector/runUnitTests"


FROM registry.access.redhat.com/ubi8/ubi-minimal:8.6

WORKDIR /

ARG COLLECTOR_VERSION
LABEL version="${COLLECTOR_VERSION}"

ARG BUILD_DIR
ARG CMAKE_BUILD_DIR
ARG USE_VALGRIND
ARG ADDRESS_SANITIZER

ENV COLLECTOR_HOST_ROOT=/host

RUN rm -rf /etc/rhsm-host
COPY --from=builder /etc/pki/entitlement /etc/pki/entitlement
COPY --from=builder /etc/rhsm /etc/rhsm

COPY --from=builder ${CMAKE_BUILD_DIR}/collector/EXCLUDE_FROM_DEFAULT_BUILD/libsinsp/libsinsp-wrapper.so /usr/local/lib/
COPY --from=builder ${CMAKE_BUILD_DIR}/collector/collector /usr/local/bin/
COPY --from=builder ${BUILD_DIR}/collector/container/scripts /

# Switch shell to bash with pipefall to avoid hadolint warning DL4006
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# hadolint ignore=DL3041
RUN mv /collector-wrapper.sh /usr/local/bin/ && \
    chmod 700 bootstrap.sh && \
    echo '/usr/local/lib' > /etc/ld.so.conf.d/usrlocallib.conf && \
    ldconfig && \
    mkdir /kernel-modules && \
    microdnf upgrade && \
    microdnf -y install c-ares kmod tbb findutils && \
    microdnf -y install jsoncpp --enablerepo=amq-clients-2-for-rhel-8-x86_64-rpms && \
    microdnf -y install jq --enablerepo=rhocp-4.6-for-rhel-8-x86_64-rpms && \
    if [ "$USE_VALGRIND" = "true" ]; then \
        microdnf -y install valgrind; \
    fi && \
    if [ "$ADDRESS_SANITIZER" = "true" ]; then \
        microdnf -y install libasan; \
    fi && \
    microdnf clean all && \
    rpm --query --all 'curl' '*rpm*' '*dnf*' '*libsolv*' '*hawkey*' 'yum*' 'findutils' | xargs -t rpm -e --nodeps && \
    rm -rf /var/cache/yum /etc/pki/entitlement /etc/rhsm

# Restore the default shell because "bootstrap.sh" expects a shell to be started with a single parameter
SHELL ["/bin/sh", "-c"]
COPY /kernel-modules/MODULE_VERSION /kernel-modules/MODULE_VERSION.txt
COPY --from=builder /THIRD_PARTY_NOTICES /THIRD_PARTY_NOTICES

EXPOSE 8080 9090

RUN rm -rf /etc/pki/entitlement && \
    rm -rf /etc/rhsm

# hadolint ignore=DL3059
RUN collector --help || if [ $? -ne 1 ]; then echo "Invalid collector build"; exit 1; fi

ENTRYPOINT ["/bootstrap.sh"]

# hadolint ignore=DL3025
CMD collector-wrapper.sh \
    --collector-config=$COLLECTOR_CONFIG \
    --collection-method=$COLLECTION_METHOD \
    --grpc-server=$GRPC_SERVER
