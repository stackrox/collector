#!/bin/sh
set -e

die() {
    echo "repackage: $*" >&2
    exit 1
}

log() {
    printf '%s | %s\n' "$(date)" "$*" >&2
}

main() {
	input_bundle="$1"
    [ -n "$input_bundle" ] || die "no input bundle file given"

	output_dir="$2"
    [ -n "$output_dir" ] || die "no output directory given"

    if [ ! -d "$output_dir" ]; then
    	mkdir -p "$output_dir" || die "Could not create output directory ${output_dir}"
    fi

    image_file="/tmp/image.bin"

    log "Extracting ${input_bundle} to ${image_file}"
    lbunzip2 -dck "$input_bundle" > "${image_file}"

	mount_dir="/tmp/mount"

    log "Mounting image ${image_file} at ${mount_dir}"
    loop_device="$(kpartx -asvr "$image_file" | cut -d' ' -f 3)"
    mkdir -p "$mount_dir" || die "Cannot create temporary mount directory"
    mount -r "/dev/mapper/${loop_device}" "$mount_dir" || die "Cannot mount image file"

    log "Bundling files ..."
    for dir in "${mount_dir}"/lib/modules/*; do
    	[ -d "$dir/build" ] || continue
    	version="$(basename "$dir")"
    	( chroot "$mount_dir" tar -czh -f - -C "/lib/modules/${version}/build" . ) >"${output_dir}/kbuild-${version}.tgz" \
    		&& echo "$version"
    done

    log "Unmounting image"
    umount "$mount_dir"
    kpartx -dv "$image_file"

    log "Removing image"
    rm -f "$image_file"
}

main "$@"

