syntax = "proto3";

package director;

option go_package = "director";

// AttributeType enumerates the
// resources for enforcement action.
enum AttributeType {
    ATTRIBUTE_CONTAINER = 0;
}

// Operation specifies the docker
// operation/API.
enum Operation {
    OPERATION_KILL = 0;
}

// Attribute is the matching criteria
// for taking enforcement action.
message Attribute {
    AttributeType type     = 1;
    string value           = 2;
}

// Action specifies the details for
// enforcer action.
message Action {
    string alert_id                 = 1;
    string node_name                = 2;
    string policy                   = 3;
    Operation operation             = 4;
    repeated Attribute attributes   = 5;
}

// EnforcerActions specifies the actions
// for the enforcer. For example, kill the container.
message EnforcerActions {
    map<string, Action> actions = 1;
}

// RegisterEnforcerRequest specifies the registration request from the enforcer.
message RegisterEnforcerRequest {
    string node = 1;
}

// EnforcerActionService notifies enforcement actions.
service EnforcerActionService {
    // RegisterEnforcer registers a enforcer client.
    rpc RegisterEnforcer(RegisterEnforcerRequest) returns (stream EnforcerActions) {}
}