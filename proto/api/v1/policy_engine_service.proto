syntax = "proto3";

option go_package = "v1";

import "google/api/annotations.proto";
import "proto/api/v1/pagination.proto";
import "proto/api/v1/policy_service.proto";

package v1;

message DetectionFSMsRequest {
    // Resource ID associated with the FSM
    repeated string resource_id = 1;
    // Name of the detection policy associated with the FSM
    repeated string name = 2;
    // Is the FSM completed
    repeated bool completed = 3;

    PaginationRequest pagination = 15;
}

message DetectionFSMsResponse {
    repeated DetectionFSM results = 1;
    PaginationResponse pagination = 2;
}

message DetectionFSM {
    string resource_id = 1;
    string name = 2;
    int64 policy_last_updated = 3;
    repeated PhaseState phase_states = 4;
    int32  current_phase_id = 5;
    bool completed = 6;
    int64 start_time_ns = 7;
    int64 completed_time_ns = 8;
    int64 last_update_ns = 9;
    string alert_id = 10;
    int64 completed_count = 11;
}

message PhaseState {
    EventFormulaState event_formula_state = 1;
    int64 start_time_ns = 2;
    int64 completed_time_ns = 3;
    int64 last_update_ns = 4;
    bool completed = 5;
    message PhaseEvent {
        int32 signal_source = 1;
        int32 source_category = 2;
        string last_signal_id = 3;
        int32 occurrences = 4;
        int64 first_signal_time_ns = 5;
        int64 last_signal_time_ns = 6;
    }
    map<string, PhaseEvent> events = 6;
}

message EventFormulaState {
    Operator operator = 1;
    repeated EventSpecifierState event_specifier_states = 2;
    repeated EventFormulaState event_formula_states = 3;
}

message EventSpecifierState {
    int32 id = 1;
    bool completed = 2;
    int32 occurrences = 3;
    int64 first_occurrence_ns = 4;
    int64 last_occurrence_ns = 5;
}

// APIs for managing StackRox security policies
service PolicyEngineService {
    // Get Detection FSMs
    rpc GetDetectionFSMs(DetectionFSMsRequest) returns (DetectionFSMsResponse) {
        option (google.api.http) = {
            get: "/v1/policy-engine/detection/fsm"
        };
    }
}
