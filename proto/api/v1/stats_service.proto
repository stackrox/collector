syntax = "proto3";

option go_package = "v1";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

package v1;

enum AlertType {
    ALL_ALERTS = 0;
    ATTACK = 1;
    POLICY_VIOLATION = 2;
    ENFORCEMENT_ACTION = 3;
}

message AlertsTrailingSevenDaysRequest {
    // Valid parameter values are: ATTACK, POLICY_VIOLATION, ENFORCEMENT_ACTION. Optional field. Returns all alert types by default.
    AlertType alert_type = 1;
    // Offset in minutes from GMT/UTC. For UTC-, use a positive offset (UTC-1: 60). For UTC+, use a negative offset (UTC+1: -60).
    int64 timezone_offset_minutes = 2 [(validator.field) = {int_gt: -1440, int_lt: 1440}];
}

message AlertsTrailingSevenDaysResponse {
    repeated AlertsTrailingSevenDaysData data = 1;
    int64 matching_alerts = 2;
}

message AlertsTrailingSevenDaysData {
    int64 critical = 1;
    string date = 2;
    int64 high = 3;
    int64 low = 4;
    int64 medium = 5;
    int64 resolved = 6;
    int64 total = 7;
}

// AlertsWithAffectedComponents API does not accept request parameters.
message AlertsWithAffectedComponentsResponse {
    int64 applications = 1;
    int64 containers = 2;
    int64 new_alerts = 3;
    int64 services = 4;
    int64 unresolved_alerts = 5;
}

message TimeSeriesTrailingSevenDaysRequest {
    // Offset in minutes from GMT/UTC. For UTC-, use a positive offset (UTC-1: 60). For UTC+, use a negative offset (UTC+1: -60).
    int64 timezone_offset_minutes = 1 [(validator.field) = {int_gt: -1440, int_lt: 1440}];
}

message TimeSeriesTrailingSevenDaysResponse {
    repeated TimeSeriesDataPoint app_containers_by_date = 1;
    repeated TimeSeriesDataPoint applications_by_date = 2;
    repeated TimeSeriesDataPoint hosts_by_date = 3;
    repeated TimeSeriesDataPoint images_by_date = 4;
    repeated TimeSeriesDataPoint infected_containers_by_date = 5;
    repeated TimeSeriesDataPoint rox_containers_by_date = 6;
    repeated TimeSeriesDataPoint services_by_date = 7;
}

message TopAlertsTrailingSevenDaysRequest {
    // Valid parameter values are: ATTACK, POLICY_VIOLATION, ENFORCEMENT_ACTION. Optional field. Returns all alert types by default.
    AlertType alert_type = 1;
}

message TopAlertsTrailingSevenDaysResponse {
    repeated string data = 1;
}

message ReportRequest {
    // Use date format YYYY-MM-DD
    string start = 1 [(validator.field) = {regex: "^\\d{4}-\\d{2}-\\d{2}$"}];
    // Use date format YYYY-MM-DD.  Optional field.
    string end = 2 [(validator.field) = {regex: "^(\\d{4}-\\d{2}-\\d{2})$|^$"}];
    // Limit the number of rows returned in each table. Optional field. Default value: 5.
    int64 limit = 3 [(validator.field) = {int_gt: -1}];
    // Offset in minutes from GMT/UTC. For UTC-, use a positive offset (UTC-1: 60). For UTC+, use a negative offset (UTC+1: -60).
    int64 timezone_offset_minutes = 4 [(validator.field) = {int_gt: -1440, int_lt: 1440}];
}

message ReportResponse {
    ReportData attacks_by_count = 1;
    ReportData attacks_by_risk_score = 2;
    ReportData event_categories = 3;
    ReportData events = 4;
    reserved 5; // Previously used for external_infection_sources.
    ReportData infected_applications = 6;
    ReportData infected_services = 7;
    ReportCounts messages = 8;
    ReportData policy_violations_by_count = 9;
    ReportData policy_violations_by_risk_score = 10;
    ReportData resolved_alerts_by_classification = 11;
    ReportData total_alerts_by_severity = 12;
    ReportCounts totals = 13;
    reserved 14; // formerly vulnerable_images
    reserved 15; // formerly vulnerable_services
}

message ReportCounts {
    int64 attacks = 1;
    int64 policy_violations = 2;
    int64 infected_apps = 3;
    int64 infected_services = 4;
}

message ReportData {
    repeated TimeSeriesLine time_series = 1;
    repeated AlertDataPoint count_data = 2;
    reserved 3; // previously cvss_data
    int64 total = 4;
    repeated InfectionSource ip_data = 5;
    bool has_data = 6;
    repeated string errors = 7;
    repeated string warnings = 8;
    repeated string info = 9;
    int64 attacks = 10;
    int64 policy_violations = 11;
    int64 infected_apps = 12;
    int64 infected_services = 13;
}

message AlertDataPoint {
    string category = 1;
    string confidence = 2;
    string severity = 3;
    int64 data = 4;
}

message TimeSeriesLine {
    string category = 1;
    repeated TimeSeriesDataPoint time_series_data_points = 2;
}

message TimeSeriesDataPoint {
    string date = 1;
    int64 data = 2;
}

message InfectionSource {
    string ip = 1;
    string service = 2;
    int64 data = 3;
}

service StatsService {

    // Get data on observed activity for report generation (see Reports tab).
    rpc GetReport (ReportRequest) returns (ReportResponse) {
        option (google.api.http) = {
            get: "/v1/stats/reports"
        };
    }

    rpc GetAlertsTrailingSevenDays (AlertsTrailingSevenDaysRequest) returns (AlertsTrailingSevenDaysResponse) {
        option (google.api.http) = {
            get: "/v1/stats/alertsTrailingSevenDays"
        };
    }

    rpc GetAlertsWithAffectedComponents (google.protobuf.Empty) returns (AlertsWithAffectedComponentsResponse) {
        option (google.api.http) = {
            get: "/v1/stats/alertsWithAffectedComponents"
        };
    }

    rpc GetTimeSeriesTrailingSevenDays (TimeSeriesTrailingSevenDaysRequest) returns (TimeSeriesTrailingSevenDaysResponse) {
        option (google.api.http) = {
            get: "/v1/stats/timeSeriesTrailingSevenDays"
        };
    }

    rpc GetTopAlertsTrailingSevenDays (TopAlertsTrailingSevenDaysRequest) returns (TopAlertsTrailingSevenDaysResponse) {
        option (google.api.http) = {
            get: "/v1/stats/topAlertsTrailingSevenDays"
        };
    }
}