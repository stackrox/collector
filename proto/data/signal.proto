syntax = "proto3";

import "proto/data/common.proto";

option cc_enable_arenas = true;

package data;

message Signal {
  oneof signal {
    KernelSignal kernel_signal = 1;
  }
  int64  time_nanos    = 10;
  string node_id       = 11;
  data.UUID cluster_id = 12;
}

message KernelSignal {
  oneof kernel_signal {
    ProcessLifecycleSignal process_lifecycle_signal = 1;
    ProcessBehaviorSignal process_behavior_signal   = 2;
    FileSignal file_signal                          = 3;
    NetworkSignal network_signal                    = 4;
  }

  string container_short_id      = 10;

  // Process ID within process namespace
  uint32 process_pid             = 11;

  ProcessDetails process_details = 12;

  bool container_privileged      = 100;
}

message ProcessDetails {
  oneof has_uid  { uint32 uid  = 1; }
  oneof has_gid  { uint32 gid  = 2; }
  oneof has_euid { uint32 euid = 3; }
  oneof has_egid { uint32 egid = 4; }
}

message ProcessLifecycleSignal {
  ProcessLifecycleSignalType type     = 1;
  int64 result                        = 2;

  // Fork Signal Details
  uint32 fork_parent_pid              = 3;

  // Exec Signal Details
  string exec_file                    = 4;
  repeated string exec_command_line   = 5;

  // Exit Signal Details
  // TODO (rc) map exit codes to enum
  int32 exit_code                     = 6;

  enum ProcessLifecycleSignalType {
    UNKNOWN = 0;
    FORK    = 1;
    EXEC    = 2;
    EXIT    = 3;
  }
}

message ProcessBehaviorSignal {
  ProcessBehaviorSignalType type = 1;
  int64 result                   = 2;

  // Module Signal Details
  string module_name             = 3;

  enum ProcessBehaviorSignalType {
    UNKNOWN = 0;
    CAPSET  = 1;
    MODULE  = 2;
    SETUID  = 3;
    SETGID  = 4;
    SETNS   = 5;
    CHDIR   = 6;
    CWD     = 7;
    KILL    = 8;
  }
}

message FileSignal {
  FileSignalType type          = 1;
  string path                  = 2;
  int64 result                 = 3;

  // Rename / Move Details
  string new_path              = 4;

  // Read / Write Details
  int64 count_bytes            = 5;

  enum FileSignalType {
    UNKNOWN = 0;
    OPEN    = 1;
    CREATE  = 2;
    CLOSE   = 3;
    READ    = 4;
    WRITE   = 5;
    RMDIR   = 6;
    UNLINK  = 7;
    LINK    = 8;
    MOVE    = 9;
    CHOWN   = 10;
    CHMOD   = 11;
    IOCTL   = 12;
    FCNTL   = 13;
    MKNOD   = 14;
  }
}

message NetworkSignal {
  NetworkSignalType type        = 1;
  int64 result                  = 2;

  ConnectionInfo connection     = 3;

  // Send / Receive Details
  int64 count_bytes             = 4;

  enum NetworkSignalType {
    UNKNOWN  = 0;
    SOCKET   = 1;
    CLOSE    = 2;
    BIND     = 3;
    CONNECT  = 4;
    ACCEPT   = 5;
    LISTEN   = 6;
    SEND     = 7;
    RECV     = 8;
  }
}

message ConnectionInfo {
  SocketFamily socket_family    = 1;

  NetworkAddress client_address = 2;
  NetworkAddress server_address = 3;

  L4Protocol protocol           = 4;

  Role role                     = 5;

  enum Role {
    ROLE_UNKNOWN = 0;
    ROLE_SERVER  = 1;
    ROLE_CLIENT  = 2;
  }
}

message NetworkAddress {
  oneof network_address {
    IPV4NetworkAddress ipv4_address   = 1;
    IPV6NetworkAddress ipv6_address   = 2;
    LocalNetworkAddress local_address = 3;
  }
}

message IPV4NetworkAddress {
  fixed32 address = 1;
  uint32 port    = 2;
}

message IPV6NetworkAddress {
  fixed64 address_high = 1;
  fixed64 address_low  = 2;
  uint32 port          = 3;
}

message LocalNetworkAddress {
  fixed64 id  = 1;
  string path = 2;
}

enum SocketFamily {
  SOCKET_FAMILY_UNKNOWN = 0;
  SOCKET_FAMILY_IPV4    = 1;
  SOCKET_FAMILY_IPV6    = 2;
  SOCKET_FAMILY_LOCAL   = 3;
}

enum L4Protocol {
  L4_PROTOCOL_UNKNOWN = 0;
  L4_PROTOCOL_TCP     = 1;
  L4_PROTOCOL_UDP     = 2;
  L4_PROTOCOL_ICMP    = 3;
  L4_PROTOCOL_RAW     = 4;
}
