syntax = "proto3";

option go_package = "v1";
option java_package = "io.stackrox.proto.api.v1";

import weak "google/api/annotations.proto";
import "api/v1/empty.proto";
import "storage/benchmark_scan.proto";

package v1;

message HostResults {
    message HostResult {
        string          host   = 1;
        storage.BenchmarkCheckStatus     result = 2;
        repeated string notes  = 3;
    }
    repeated HostResult host_results = 1;
}

message GetHostResultsRequest {
    string scan_id    = 1;
    string check_name = 2;
}

message ListBenchmarkScansRequest {
    string          benchmark_id = 1;
    repeated string cluster_ids  = 2;
}

message ListBenchmarkScansResponse {
    repeated storage.BenchmarkScanMetadata scan_metadata = 1;
}

message GetBenchmarkScanRequest {
    string          scan_id     = 1;
    repeated string cluster_ids = 2;
    repeated string hosts       = 3;
}

message StatusCount {
    storage.BenchmarkCheckStatus status = 1;
    int64       count  = 2;
}

message BenchmarkGroup {
    string               benchmark = 1;
    repeated StatusCount counts    = 2;
}

message ClusterGroup {
    string                  cluster_id   = 1;
    string                  cluster_name = 2;
    repeated BenchmarkGroup benchmarks   = 3;
}

message GetBenchmarkScansSummaryResponse {
    repeated ClusterGroup clusters = 1;
}

service BenchmarkScanService {

    rpc PostBenchmarkScan (storage.BenchmarkScanMetadata) returns (Empty) {
        option (google.api.http) = {
            post: "/v1/benchmarks/scans"
            body: "*"
        };
    }

    rpc ListBenchmarkScans (ListBenchmarkScansRequest) returns (ListBenchmarkScansResponse) {
        option (google.api.http) = {
            get: "/v1/benchmarks/scans"
        };
    }

    rpc GetBenchmarkScan (GetBenchmarkScanRequest) returns (storage.BenchmarkScan) {
        option (google.api.http) = {
            get: "/v1/benchmarks/scans/{scan_id}"
        };
    }

    rpc GetHostResults (GetHostResultsRequest) returns (HostResults) {
        option (google.api.http) = {
            get: "/v1/benchmarks/scans/{scan_id}/{check_name}"
        };
    }

    rpc GetBenchmarkScansSummary (Empty) returns (GetBenchmarkScansSummaryResponse) {
        option (google.api.http) = {
            get: "/v1/benchmarks/summary/scans"
        };
    }
}
