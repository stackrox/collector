syntax = "proto3";

option go_package = "v1";
option java_package = "io.stackrox.proto.api.v1";

import weak "google/api/annotations.proto";
import "api/v1/common.proto";
import "api/v1/empty.proto";
import "storage/benchmark.proto";
import "storage/benchmark_scan.proto";

package v1;

message GetBenchmarkChecksResponse {
    repeated storage.BenchmarkCheckDefinition checks = 1;
}

message GetBenchmarkRequest {
    string name = 1;
}

message GetBenchmarksRequest {
    string name = 1;
}

message GetBenchmarksResponse {
    repeated storage.Benchmark benchmarks = 1;
}

message DeleteBenchmarkRequest {
    string name = 1;
}

service BenchmarkService {

    rpc GetChecks (Empty) returns (GetBenchmarkChecksResponse) {
        option (google.api.http) = {
            get: "/v1/benchmarks/checks"
        };
    }

    rpc GetBenchmark (ResourceByID) returns (storage.Benchmark) {
        option (google.api.http) = {
            get: "/v1/benchmarks/configs/{id}"
        };
    }

    rpc GetBenchmarks (GetBenchmarksRequest) returns (GetBenchmarksResponse) {
        option (google.api.http) = {
            get: "/v1/benchmarks/configs"
        };
    }

    rpc PostBenchmark (storage.Benchmark) returns (storage.Benchmark) {
        option (google.api.http) = {
            post: "/v1/benchmarks/configs"
            body: "*"
        };
    }

    rpc PutBenchmark (storage.Benchmark) returns (Empty) {
        option (google.api.http) = {
            put: "/v1/benchmarks/configs/{id}"
            body: "*"
        };
    }

    rpc DeleteBenchmark (ResourceByID) returns (Empty) {
        option (google.api.http) = {
            delete: "/v1/benchmarks/configs/{id}"
        };
    }

}
