syntax = "proto3";

option go_package = "v1";
option java_package = "stackrox.generated";

import weak "google/api/annotations.proto";
import "api/v1/common.proto";
import "api/v1/empty.proto";

package v1;

enum ImageIntegrationCategory {
    REGISTRY = 0;
    SCANNER  = 1;
}

message DockerConfig {
    string endpoint = 1;
    string username = 2;
    string password = 3;
    bool insecure   = 4;
}

message DTRConfig {
    string username = 1;
    string password = 2;
    string endpoint = 3;
    bool insecure   = 4;
}

message ClairifyConfig {
    string endpoint              = 1;
}

message QuayConfig {
    string endpoint   = 1;
    string oauthToken = 2;
}

message ECRConfig {
    string registry_id       = 1;
    string access_key_id     = 2;
    string secret_access_key = 3;
    string region            = 4;
}

message ImageIntegration {
    string id                                    = 1;
    string name                                  = 2;
    string type                                  = 3;
    map<string, string> config                   = 4;
    // If a list of clusters is provided, the integration will only be accessed from the specified clusters' sensors.
    repeated string clusters                     = 5;
    repeated ImageIntegrationCategory categories = 6;
    oneof IntegrationConfig {
        DTRConfig      dtr      = 7;
        ClairifyConfig clairify = 8;
        DockerConfig   docker   = 9;
        QuayConfig     quay     = 10;
        ECRConfig      ecr      = 11;
    }
}

message GetImageIntegrationsRequest {
    string name    = 1;
    string cluster = 2;
}

message GetImageIntegrationsResponse {
    repeated ImageIntegration integrations = 1;
}

service ImageIntegrationService {

    rpc GetImageIntegration (ResourceByID) returns (ImageIntegration) {
        option (google.api.http) = {
            get: "/v1/imageintegrations/{id}"
        };
    }

    rpc GetImageIntegrations (GetImageIntegrationsRequest) returns (GetImageIntegrationsResponse) {
        option (google.api.http) = {
            get: "/v1/imageintegrations"
        };
    }

    rpc PostImageIntegration (ImageIntegration) returns (ImageIntegration) {
        option (google.api.http) = {
            post: "/v1/imageintegrations"
            body: "*"
        };
    }

    rpc PutImageIntegration (ImageIntegration) returns (Empty) {
        option (google.api.http) = {
            put: "/v1/imageintegrations/{id}"
            body: "*"
        };
    }

    rpc TestImageIntegration (ImageIntegration) returns (Empty) {
        option (google.api.http) = {
            post: "/v1/imageintegrations/test"
            body: "*"
        };
    }

    rpc DeleteImageIntegration (ResourceByID) returns (Empty) {
        option (google.api.http) = {
            delete: "/v1/imageintegrations/{id}"
        };
    }

}
