syntax = "proto3";

option go_package = "v1";
option java_package = "stackrox.generated";

import weak "google/api/annotations.proto";
import "api/v1/common.proto";
import "api/v1/empty.proto";

package v1;

message Jira {
    string url        = 1;
    string username   = 2;
    string password   = 3;
    string issue_type = 4;
}

message Email {
    string server    = 1;
    string sender    = 2;
    string username  = 3;
    string password  = 4;
    bool disableTLS  = 5;
    bool useSTARTTLS = 6;
}

message CSCC {
    string service_account = 1;
    string gcp_org_id      = 2;
    string gcp_project     = 3;
}

message Notifier {
    string id                  = 1;
    string name                = 2;
    string type                = 3;
    string ui_endpoint         = 4;
    bool enabled               = 5;
    string label_key           = 8;
    string label_default       = 9;
    oneof config {
        Jira  jira             = 10;
        Email email            = 11;
        CSCC  cscc             = 12;
    }
}

message GetNotifiersRequest {
    string name = 1;
    string type = 2;
}

message GetNotifiersResponse {
    repeated Notifier notifiers = 1;
}

message DeleteNotifierRequest {
    string id  = 1;
    bool force = 2;
}

service NotifierService {

    rpc GetNotifier (ResourceByID) returns (Notifier) {
        option (google.api.http) = {
            get: "/v1/notifiers/{id}"
        };
    }

    rpc GetNotifiers (GetNotifiersRequest) returns (GetNotifiersResponse) {
        option (google.api.http) = {
            get: "/v1/notifiers"
        };
    }

    rpc PutNotifier (Notifier) returns (Empty) {
        option (google.api.http) = {
            put: "/v1/notifiers/{id}"
            body: "*"
        };
    }

    rpc PostNotifier (Notifier) returns (Notifier) {
        option (google.api.http) = {
            post: "/v1/notifiers"
            body: "*"
        };
    }

    rpc TestNotifier (Notifier) returns (Empty) {
        option (google.api.http) = {
            post: "/v1/notifiers/test"
            body: "*"
        };
    }

    rpc DeleteNotifier (DeleteNotifierRequest) returns (Empty) {
        option (google.api.http) = {
            delete: "/v1/notifiers/{id}"
        };
    }

}
